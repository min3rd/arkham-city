var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"0.7.2","fields":[{"name":"title","boost":10},{"name":"body","boost":1}],"ref":"url","tokenizer":"default","documentStore":{"store":{"index.html":["allow","amaz","applic","author","aw","backer","base","board","build","channel","check","click","cloud","come","cours","coverag","debug","deeper","deploy","deploywith","descript","develop","devtool","discord","dive","document","e2","effici","ensur","enterpris","experi","fast","featur","few","flow","focu","follow","framework","full","g","graph","grow","hand","handi","handl","help","here","https://nestjs.com","index","inform","infrastructur","instal","installcompil","interact","job","join","kamil","key","learn","licens","linkedin","look","loop","make","manag","match","mau","mit","mode","more","my≈õliwiec","need","nest","nestframework","nestj","node.j","npm","offer","offici","open","out","part","platform","pleas","possibl","product","progress","project","question","read","readi","readm","real","repositori","requir","resourc","result","run","scalabl","server","setup","side","simpl","sourc","sponsor","start","start:debug","start:dev","start:prodrun","starter","stay","step","straightforward","support","take","test","test:covapi","test:e2","thank","time","touch","twitter","typescript","unit","updat","us","video","visit","visual","watch","websit","work","x","you'd","you'r"],"overview.html":["10","19","7","browser","class","inject","interfac","match","out","overview","reset","result","support","svg","zoom"],"modules.html":["match","modul","result"],"injectables/AppService.html":["0","48","_id","all(us","app","app.activ","app.callback","app.deleteon","app.descript","app.nam","app.sav","app.tojson","app.typ","app_typ","appid","appmodel","appservic","async","await","badmicroservicerespons","badmicroserviceresponse(microserviceerrorcode.app_not_found","badmicroserviceresponse(microserviceerrorcode.dulicate_app","callback","class","clientid","const","constructor","constructor(appmodel","creat","create(us","crypto","delet","delete(us","descript","desctipt","e.tojson","export","fals","file","get(us","hashservic","import","info","inject","injectmodel","injectmodel(app.nam","jwtpayload","length","match","metadata","method","microserviceerrorcod","model","mongoos","name","nestjs/common","nestjs/mongoos","new","parseint(process.env.project_app_secret_key_length","privat","process.env.core_hard_delet","project","projectid","randombyt","randomuuid","rawsecret","readonli","result","return","secretkey","sourc","src/core/hash/hash.servic","src/core/microservice/microservice.typ","src/modules/auth/auth.typ","src/modules/project/app/app.service.t","string","successmicroservicerespons","successmicroserviceresponse(app.tojson","successmicroserviceresponse(apps.map((","successmicroserviceresponse(tru","this.appmodel","this.appmodel.find","this.appmodel.findon","this.hashservice.hash(rawsecret","tostring(\"base64","true","type","updat","update(us","user","user.usernam","usernam","void"],"injectables/AuthGuard.html":["access","argument","assign","async","authguard","await","bearer","canactiv","canactivate(context","catch","class","condit","configservic","const","constructor","constructor(jwtservic","context.getclass","context.gethandl","context.switchtohttp().getrequest","disabl","eslint","eslint/no","executioncontext","export","express","extracttokenfromhead","extracttokenfromheader(request","file","handler","here","implement","import","info","inject","is_public_key","ispubl","jwtpayload","jwtservic","line","match","member","method","nestjs/common","nestjs/config","nestjs/cor","nestjs/jwt","new","next","object","payload","privat","promis","reflector","request","request.headers.authorization?.split","request[\"us","result","return","rout","secret","see","sourc","src/core/decorators/publ","src/core/guards/auth/auth.guard.t","src/modules/auth/auth.typ","string","this.configservice.get(\"jwt_secret","this.extracttokenfromheader(request","this.jwtservice.verifyasync(token","this.reflector.getallandoverride(is_public_key","throw","token","tri","true","type","typescript","unauthorizedexcept","undefin","unsaf","we'r"],"injectables/AuthService.html":["accesstoken","async","auth.typ","authservic","await","boolean","class","client","clientredi","compileloginrespons","compileloginresponse(us","const","constructor","constructor(cli","email","export","fals","file","ignor","ignorerefreshtoken","import","info","inject","inject(microserviceconfig.auth.nam","jwtpayload","jwtservic","loginresponsedto","match","metadata","method","microserviceconfig","nestjs/common","nestjs/jwt","nestjs/microservic","payload","privat","promis","readonli","refreshtoken","respons","result","return","sourc","src/config/microservice.config","src/modules/auth/auth.service.t","sub","this.jwtservice.signasync(payload","undefin","user","user/user.typ","user?.email","user?.refreshtoken","user?.usernam","usernam"],"injectables/ExceptionInterceptor.html":["access","callhandl","catcherror","catcherror((","class","date","disabl","e","e['timestamp","eslint","eslint/no","exceptioninterceptor","executioncontext","export","file","implement","import","info","inject","intercept","intercept(context","line","match","member","method","nestinterceptor","nestjs/common","new","next","next.handle().pip","observ","result","return","rxj","sourc","src/core/interceptors/exception/exception.interceptor.t","typescript","unsaf"],"injectables/FirestoreService.html":["assign","async","await","badmicroservicerespons","badmicroserviceresponse(microserviceerrorcode.default","class","client","clientredi","const","constructor","constructor(dynamicmodel","createrecord","createrecord(schemanam","data","disabl","dynamicmodel","dynamicschema","dynamicschema.sav","eslint","eslint/no","export","field","file","firestor","firestore.typ","firestoreservic","import","info","inject","inject(microserviceconfig.firestore.nam","injectmodel","injectmodel(dynamicschema.nam","line","match","method","microserviceconfig","microserviceerrorcod","microservicerespons","model","mongoos","mongoose/mongoose.servic","mongooseservic","name","nestjs/common","nestjs/microservic","nestjs/mongoos","new","next","privat","promis","readonli","record","result","return","schemanam","sourc","src/config/microservice.config","src/core/microservice/microservice.typ","src/modules/firestore/firestore.service.t","storeschema","storeschema(schemanam","string","successmicroservicerespons","successmicroserviceresponse(record","this.dynamicmodel","this.mongooseservice.createrecord(schemanam","typescript","unsaf","void"],"injectables/HashService.html":["10","bcrypt","bcrypt.comparesync(target","bcrypt.hashsync(valu","class","compar","compare(target","default","export","file","hash","hash(valu","hashservic","import","info","inject","match","method","nestjs/common","number","properti","result","return","saltorround","sourc","src/core/hash/hash.service.t","string","this.saltorround","valu","void"],"injectables/MongooseService.html":["_model","_model(data","_schema","access","argument","array","assign","async","await","bigint","boolean","call","catch","class","configservic","conn","conn.model(schemanam","console.log(error","const","constructor","constructor(dynamicschemamodel","createconnect","createrecord","createrecord(schemanam","data","data[key","datatyp","datatype[key","date","date.parse(`${data[key","disabl","dynamicschema","dynamicschemamodel","error","eslint","eslint/no","export","fals","file","firestor","firestore/firestore.typ","fromdatatotyp","fromdatatotype(data","import","info","inject","injectmodel","injectmodel(dynamicschema.nam","instanceof","isnan(d","key","line","match","member","method","model","mongoos","mongoose.createconnect","mongoose.schema(datatyp","mongooseservic","nestjs/common","nestjs/config","nestjs/mongoos","new","next","number","object","object.keys(data","privat","readonli","record","record.sav","result","return","sourc","src/modules/mongoose/mongoose.service.t","string","this.configservice.get('mongo_db_firestor","this.createconnect","this.fromdatatotype(data","this.fromdatatotype(data.pop","this.fromdatatotype(data[key","tri","type","typeof","typescript","unsaf","void"],"injectables/ProjectService.html":["0","_id","all(us","all.map((","async","auth/auth.typ","await","badmicroservicerespons","check","check.length","class","const","constructor","constructor(projectmodel","creat","create(us","descript","e.tojson","export","file","findbyid","findbyid(us","id","import","info","inject","injectmodel","injectmodel(project.nam","jwtpayload","length","match","metadata","method","microserviceerrorcod","microserviceerrorcode.incorrect_project_id","microserviceerrorcode.project_already_exist","model","mongoos","name","nestjs/common","nestjs/mongoos","new","privat","project","project.descript","project.nam","project.sav","project.tojson","project.typ","project?.tojson","projectid","projectmodel","projectservic","result","return","sourc","src/core/microservice/microservice.typ","src/modules/project/project.service.t","string","successmicroservicerespons","this.projectmodel","this.projectmodel.find","this.projectmodel.findbyid(projectid","this.projectmodel.findon","undefin","updat","update(projectid","user","user.usernam","usernam","void"],"injectables/ResponseInterceptor.html":["assign","callhandl","class","const","data","date","disabl","error","errorcod","eslint","eslint/no","executioncontext","export","fals","file","implement","import","info","inject","intercept","intercept(context","line","map","map((data","match","method","nestinterceptor","nestjs/common","new","next","next.handle().pip","observ","respons","responsedto","responseinterceptor","result","return","rxj","sourc","src/core/interceptors/response/response.interceptor.t","src/modules/base/base.typ","timestamp","typescript","undefin","unsaf"],"injectables/UserService.html":["0","assign","async","await","badmicroservicerespons","badmicroserviceresponse(microserviceerrorcode.duplicate_email","badmicroserviceresponse(microserviceerrorcode.email_not_found","badmicroserviceresponse(microserviceerrorcode.user_not_found","class","configservic","const","constructor","constructor(usermodel","disabl","email","eslint","eslint/no","exec","expiresin","export","file","findonebyemailandpassword","findonebyemailandpassword(email","findonebyrefreshtoken","findonebyrefreshtoken(refreshtoken","firstnam","hashservic","ignor","import","info","inject","injectmodel","injectmodel(user.nam","jwt_refresh_token_expires_in","jwtservic","lastnam","line","match","metadata","method","microserviceerrorcod","microserviceerrorcode.incorrect_refresh_token","microserviceerrorcode.password_is_incorrect","model","mongoos","nestjs/common","nestjs/config","nestjs/jwt","nestjs/mongoos","new","next","password","payload","privat","readonli","refreshtoken","registerbyemailandpassword","registerbyemailandpassword(email","result","return","secret","sourc","src/core/hash/hash.servic","src/core/microservice/microservice.typ","src/modules/user/user.service.t","string","sub","successmicroservicerespons","successmicroserviceresponse(user.tojson","this.configservice.get","this.configservice.get('jwt_secret","this.hashservice.compare(password","this.hashservice.hash(password","this.jwtservice.signasync","this.jwtservice.verifyasync(refreshtoken","this.usermodel","this.usermodel.countdocu","this.usermodel.findon","typescript","undefin","unsaf","user","user.email","user.password","user.refreshtoken","user.sav","user.tojson","user.typ","usermodel","usernam","userservic","void"],"classes/BadMicroserviceResponse.html":["01x0001","01x0002","01x0003","01x0004","01x0005","01x0006","01x0007","01x0008","01x0009","alreadi","app","app_not_found","badmicroservicerespons","boolean","class","code","constructor","constructor(cod","constructor(data","constructor(errorcod","data","default","dulicate_app","duplicate_email","email","email_not_found","error","errorcod","exist","export","fals","file","find","found","id","ierrorcod","ierrorcode('00x0000","implement","incorrect","incorrect_project_id","incorrect_refresh_token","info","interfac","match","messag","microserviceerrorcod","microserviceerrorcode.default","microservicerespons","new","password","password_is_incorrect","project","project_already_exist","properti","readonli","refresh","regist","registerd","result","sourc","src/core/microservice/microservice.type.t","static","string","successmicroservicerespons","t","this.cod","this.data","this.errorcod","this.messag","token","true","undefin","unknow","user","user_not_found","valu"],"classes/BadRequestAlertException.html":["badrequestalertexcept","boolean","class","constructor","constructor(errorcod","date","errorcod","export","extend","file","getrespons","httpexcept","httpstatu","httpstatus.bad_request","ierrorcod","import","info","match","messag","method","microservice/microservice.typ","nestjs/common","new","object","properti","result","return","sourc","src/core/exceptions/badrequestalertexception.t","statuscod","string","super(errorcode.cod","this.errorcod","this.errorcode.cod","this.errorcode.messag","this.getstatu","timestamp","undefin"],"classes/BaseService.html":["aftercallmicroservic","aftercallmicroservice(r","badrequestalertexcept","badrequestalertexception(res.errorcod","baseservic","class","core/exceptions/badrequestalertexcept","core/microservice/microservice.typ","export","file","import","info","match","method","microservicerespons","new","public","res.error","result","return","sourc","src/modules/base/base.service.t","throw","void"],"classes/GatewayController.html":["aftercallmicroservic","aftercallmicroservice(r","badrequestalertexcept","badrequestalertexception(res.errorcod","class","exceptions/badrequestalertexcept","export","file","gatewaycontrol","import","info","match","method","microservice/microservice.typ","microservicerespons","new","res.error","result","return","sourc","src/core/gateway/gateway.controller.t","throw","void"],"classes/IErrorCode.html":["01x0001","01x0002","01x0003","01x0004","01x0005","01x0006","01x0007","01x0008","01x0009","alreadi","app","app_not_found","badmicroservicerespons","boolean","class","code","constructor","constructor(cod","constructor(data","constructor(errorcod","data","default","dulicate_app","duplicate_email","email","email_not_found","error","errorcod","exist","export","fals","file","find","found","id","ierrorcod","ierrorcode('00x0000","implement","incorrect","incorrect_project_id","incorrect_refresh_token","info","interfac","match","messag","microserviceerrorcod","microserviceerrorcode.default","microservicerespons","new","password","password_is_incorrect","project","project_already_exist","properti","readonli","refresh","regist","registerd","result","sourc","src/core/microservice/microservice.type.t","static","string","successmicroservicerespons","t","this.cod","this.data","this.errorcod","this.messag","token","true","undefin","unknow","user","user_not_found","valu"],"classes/MicroserviceErrorCode.html":["01x0001","01x0002","01x0003","01x0004","01x0005","01x0006","01x0007","01x0008","01x0009","alreadi","app","app_not_found","badmicroservicerespons","boolean","class","code","constructor","constructor(cod","constructor(data","constructor(errorcod","data","default","dulicate_app","duplicate_email","email","email_not_found","error","errorcod","exist","export","fals","file","find","found","id","ierrorcod","ierrorcode('00x0000","implement","incorrect","incorrect_project_id","incorrect_refresh_token","info","interfac","match","messag","microserviceerrorcod","microserviceerrorcode.default","microservicerespons","new","password","password_is_incorrect","project","project_already_exist","properti","readonli","refresh","regist","registerd","result","sourc","src/core/microservice/microservice.type.t","static","string","successmicroservicerespons","t","this.cod","this.data","this.errorcod","this.messag","token","true","undefin","unknow","user","user_not_found","valu"],"classes/SuccessMicroserviceResponse.html":["01x0001","01x0002","01x0003","01x0004","01x0005","01x0006","01x0007","01x0008","01x0009","alreadi","app","app_not_found","badmicroservicerespons","boolean","class","code","constructor","constructor(cod","constructor(data","constructor(errorcod","data","default","dulicate_app","duplicate_email","email","email_not_found","error","errorcod","exist","export","fals","file","find","found","id","ierrorcod","ierrorcode('00x0000","implement","incorrect","incorrect_project_id","incorrect_refresh_token","info","interfac","match","messag","microserviceerrorcod","microserviceerrorcode.default","microservicerespons","new","password","password_is_incorrect","project","project_already_exist","properti","readonli","refresh","regist","registerd","result","sourc","src/core/microservice/microservice.type.t","static","string","successmicroservicerespons","t","this.cod","this.data","this.errorcod","this.messag","token","true","undefin","unknow","user","user_not_found","valu"],"interfaces/AllProjectAppReqPayload.html":["allprojectappreqpayload","app_typ","appid","callback","createprojectappreqpayload","deleteprojectappreqpayload","descript","export","file","getprojectappreqpayload","import","info","interfac","jwtpayload","match","name","projectid","properti","result","sourc","src/microservices/project/app/app.type.t","src/modules/auth/auth.typ","src/modules/project/app/app.typ","string","type","updateprojectappreqpayload","user"],"interfaces/CreateFirestoreRecord.html":["createfirestorerecord","data","export","file","info","interfac","match","properti","result","schemanam","sourc","src/microservices/firestore/firestore.type.t","string","type"],"interfaces/CreateProjectAppReqDto.html":["app_typ","callback","createprojectappreqdto","descript","export","file","import","info","interfac","match","name","properti","result","sourc","src/gateway/project/app/app.type.t","src/modules/project/app/app.typ","string","type","updateprojectappreqdto"],"interfaces/CreateProjectAppReqPayload.html":["allprojectappreqpayload","app_typ","appid","callback","createprojectappreqpayload","deleteprojectappreqpayload","descript","export","file","getprojectappreqpayload","import","info","interfac","jwtpayload","match","name","projectid","properti","result","sourc","src/microservices/project/app/app.type.t","src/modules/auth/auth.typ","src/modules/project/app/app.typ","string","type","updateprojectappreqpayload","user"],"interfaces/DeleteProjectAppReqPayload.html":["allprojectappreqpayload","app_typ","appid","callback","createprojectappreqpayload","deleteprojectappreqpayload","descript","export","file","getprojectappreqpayload","import","info","interfac","jwtpayload","match","name","projectid","properti","result","sourc","src/microservices/project/app/app.type.t","src/modules/auth/auth.typ","src/modules/project/app/app.typ","string","type","updateprojectappreqpayload","user"],"interfaces/GetProjectAppReqPayload.html":["allprojectappreqpayload","app_typ","appid","callback","createprojectappreqpayload","deleteprojectappreqpayload","descript","export","file","getprojectappreqpayload","import","info","interfac","jwtpayload","match","name","projectid","properti","result","sourc","src/microservices/project/app/app.type.t","src/modules/auth/auth.typ","src/modules/project/app/app.typ","string","type","updateprojectappreqpayload","user"],"interfaces/GetProjectByIdReqPayload.html":["descript","export","file","getprojectbyidreqpayload","import","info","interfac","jwtpayload","match","name","newprojectreqpayload","projectid","properti","result","sourc","src/microservices/project/project.type.t","src/modules/auth/auth.typ","string","type","user"],"interfaces/JWTPayload.html":["accesstoken","email","export","file","firstnam","info","interfac","jwtpayload","lastnam","loginbyemailandpassword","loginbyrefreshtoken","loginresponsedto","match","metadata","password","properti","refreshtoken","registerbyemailandpassworddto","registerresponsedto","result","sourc","src/modules/auth/auth.type.t","string","sub","type","usernam"],"interfaces/LogInByEmailAndPassword.html":["accesstoken","email","export","file","firstnam","info","interfac","jwtpayload","lastnam","loginbyemailandpassword","loginbyrefreshtoken","loginresponsedto","match","metadata","password","properti","refreshtoken","registerbyemailandpassworddto","registerresponsedto","result","sourc","src/modules/auth/auth.type.t","string","sub","type","usernam"],"interfaces/LogInByRefreshToken.html":["accesstoken","email","export","file","firstnam","info","interfac","jwtpayload","lastnam","loginbyemailandpassword","loginbyrefreshtoken","loginresponsedto","match","metadata","password","properti","refreshtoken","registerbyemailandpassworddto","registerresponsedto","result","sourc","src/modules/auth/auth.type.t","string","sub","type","usernam"],"interfaces/LogInResponseDto.html":["accesstoken","email","export","file","firstnam","info","interfac","jwtpayload","lastnam","loginbyemailandpassword","loginbyrefreshtoken","loginresponsedto","match","metadata","password","properti","refreshtoken","registerbyemailandpassworddto","registerresponsedto","result","sourc","src/modules/auth/auth.type.t","string","sub","type","usernam"],"interfaces/MicroserviceResponse.html":["01x0001","01x0002","01x0003","01x0004","01x0005","01x0006","01x0007","01x0008","01x0009","alreadi","app","app_not_found","badmicroservicerespons","boolean","class","code","constructor(cod","constructor(data","constructor(errorcod","data","default","dulicate_app","duplicate_email","email","email_not_found","error","errorcod","exist","export","fals","file","find","found","id","ierrorcod","ierrorcode('00x0000","implement","incorrect","incorrect_project_id","incorrect_refresh_token","info","interfac","match","messag","microserviceerrorcod","microserviceerrorcode.default","microservicerespons","new","password","password_is_incorrect","project","project_already_exist","properti","readonli","refresh","regist","registerd","result","sourc","src/core/microservice/microservice.type.t","static","string","successmicroservicerespons","t","this.cod","this.data","this.errorcod","this.messag","token","true","type","undefin","unknow","user","user_not_found"],"interfaces/NewProjectDto.html":["descript","export","file","info","interfac","match","name","newprojectdto","properti","result","sourc","src/gateway/project/project.type.t","string","type"],"interfaces/NewProjectReqPayload.html":["descript","export","file","getprojectbyidreqpayload","import","info","interfac","jwtpayload","match","name","newprojectreqpayload","projectid","properti","result","sourc","src/microservices/project/project.type.t","src/modules/auth/auth.typ","string","type","user"],"interfaces/RegisterByEmailAndPasswordDto.html":["accesstoken","email","export","file","firstnam","info","interfac","jwtpayload","lastnam","loginbyemailandpassword","loginbyrefreshtoken","loginresponsedto","match","metadata","password","properti","refreshtoken","registerbyemailandpassworddto","registerresponsedto","result","sourc","src/modules/auth/auth.type.t","string","sub","type","usernam"],"interfaces/RegisterResponseDto.html":["accesstoken","email","export","file","firstnam","info","interfac","jwtpayload","lastnam","loginbyemailandpassword","loginbyrefreshtoken","loginresponsedto","match","metadata","password","properti","refreshtoken","registerbyemailandpassworddto","registerresponsedto","result","sourc","src/modules/auth/auth.type.t","string","sub","type","usernam"],"interfaces/ResponseDto.html":["activ","auditent","boolean","class","createdat","createdbi","data","date","default","error","errorcod","export","fals","file","import","info","interfac","lastmodifiedat","lastmodifiedbi","match","nestjs/mongoos","prop","properti","responsedto","result","schema","select","sourc","src/modules/base/base.type.t","string","timestamp","true","type"],"interfaces/UpdateProjectAppReqDto.html":["app_typ","callback","createprojectappreqdto","descript","export","file","import","info","interfac","match","name","properti","result","sourc","src/gateway/project/app/app.type.t","src/modules/project/app/app.typ","string","type","updateprojectappreqdto"],"interfaces/UpdateProjectAppReqPayload.html":["allprojectappreqpayload","app_typ","appid","callback","createprojectappreqpayload","deleteprojectappreqpayload","descript","export","file","getprojectappreqpayload","import","info","interfac","jwtpayload","match","name","projectid","properti","result","sourc","src/microservices/project/app/app.type.t","src/modules/auth/auth.typ","src/modules/project/app/app.typ","string","type","updateprojectappreqpayload","user"],"miscellaneous.html":["appschema","default","dynamicschemaschema","is_public_key","ispubl","match","microserviceconfig","miscellan","projectschema","public","result","userschema","valu","variabl"],"coverage.html":["0","0/1","0/2","0/3","0/4","0/5","0/6","0/7","allprojectappreqpayload","appservic","authguard","authservic","badmicroservicerespons","badrequestalertexcept","baseservic","class","coverag","createfirestorerecord","createprojectappreqdto","createprojectappreqpayload","deleteprojectappreqpayload","document","exceptioninterceptor","file","firestoreservic","gatewaycontrol","getprojectappreqpayload","getprojectbyidreqpayload","hashservic","identifi","ierrorcod","inject","interfac","jwtpayload","loginbyemailandpassword","loginbyrefreshtoken","loginresponsedto","match","microserviceerrorcod","microservicerespons","mongooseservic","newprojectdto","newprojectreqpayload","project","projectservic","registerbyemailandpassworddto","registerresponsedto","responsedto","responseinterceptor","result","src/core/exceptions/badrequestalertexception.t","src/core/gateway/gateway.controller.t","src/core/guards/auth/auth.guard.t","src/core/hash/hash.service.t","src/core/interceptors/exception/exception.interceptor.t","src/core/interceptors/response/response.interceptor.t","src/core/microservice/microservice.type.t","src/gateway/project/app/app.type.t","src/gateway/project/project.type.t","src/microservices/firestore/firestore.type.t","src/microservices/project/app/app.type.t","src/microservices/project/project.type.t","src/modules/auth/auth.service.t","src/modules/auth/auth.type.t","src/modules/base/base.service.t","src/modules/base/base.type.t","src/modules/firestore/firestore.service.t","src/modules/mongoose/mongoose.service.t","src/modules/project/app/app.service.t","src/modules/project/project.service.t","src/modules/user/user.service.t","statement","successmicroservicerespons","type","updateprojectappreqdto","updateprojectappreqpayload","userservic"]},"length":41},"tokenStore":{"root":{"0":{"1":{"docs":{},"x":{"0":{"0":{"0":{"1":{"docs":{"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.005813953488372093},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.005813953488372093},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.005813953488372093},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.005813953488372093},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.005813953488372093}}},"2":{"docs":{"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.005813953488372093},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.005813953488372093},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.005813953488372093},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.005813953488372093},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.005813953488372093}}},"3":{"docs":{"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.005813953488372093},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.005813953488372093},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.005813953488372093},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.005813953488372093},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.005813953488372093}}},"4":{"docs":{"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.005813953488372093},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.005813953488372093},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.005813953488372093},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.005813953488372093},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.005813953488372093}}},"5":{"docs":{"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.005813953488372093},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.005813953488372093},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.005813953488372093},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.005813953488372093},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.005813953488372093}}},"6":{"docs":{"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.005813953488372093},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.005813953488372093},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.005813953488372093},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.005813953488372093},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.005813953488372093}}},"7":{"docs":{"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.005813953488372093},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.005813953488372093},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.005813953488372093},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.005813953488372093},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.005813953488372093}}},"8":{"docs":{"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.005813953488372093},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.005813953488372093},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.005813953488372093},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.005813953488372093},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.005813953488372093}}},"9":{"docs":{"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.005813953488372093},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.005813953488372093},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.005813953488372093},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.005813953488372093},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.005813953488372093}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.0033444816053511705},"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.010582010582010581},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715},"coverage.html":{"ref":"coverage.html","tf":0.19270833333333334}},"/":{"1":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.03125}}},"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.041666666666666664}}},"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.07291666666666667}}},"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.026041666666666668}}},"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}}},"6":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}}},"7":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}}},"docs":{}}},"1":{"0":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555},"injectables/HashService.html":{"ref":"injectables/HashService.html","tf":0.037037037037037035}}},"9":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555}}},"docs":{}},"4":{"8":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.0033444816053511705}}},"docs":{}},"7":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555}}},"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.006688963210702341},"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.010582010582010581}}}}},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"(":{"docs":{"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.005291005291005291}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"interfaces/AllProjectAppReqPayload.html":{"ref":"interfaces/AllProjectAppReqPayload.html","tf":5.024390243902439},"interfaces/CreateProjectAppReqPayload.html":{"ref":"interfaces/CreateProjectAppReqPayload.html","tf":0.01},"interfaces/DeleteProjectAppReqPayload.html":{"ref":"interfaces/DeleteProjectAppReqPayload.html","tf":0.011494252873563218},"interfaces/GetProjectAppReqPayload.html":{"ref":"interfaces/GetProjectAppReqPayload.html","tf":0.011494252873563218},"interfaces/UpdateProjectAppReqPayload.html":{"ref":"interfaces/UpdateProjectAppReqPayload.html","tf":0.009523809523809525},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.01744186046511628},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.01744186046511628},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.01744186046511628},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.01744186046511628},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.01744186046511628}}}}}}}},"m":{"docs":{},"a":{"docs":{},"z":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}},"p":{"docs":{},"p":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.03678929765886288},"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.011627906976744186},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.011627906976744186},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.011627906976744186},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.011627906976744186},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.011627906976744186}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.034334763948497854}}}}},".":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.0033444816053511705}}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.0033444816053511705}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.0033444816053511705}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.0033444816053511705}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.0033444816053511705}}}}},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.010033444816053512}}}}},"t":{"docs":{},"o":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.006688963210702341}}}}}}},"y":{"docs":{},"p":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.006688963210702341}}}}}},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.016722408026755852},"interfaces/AllProjectAppReqPayload.html":{"ref":"interfaces/AllProjectAppReqPayload.html","tf":0.036585365853658534},"interfaces/CreateProjectAppReqDto.html":{"ref":"interfaces/CreateProjectAppReqDto.html","tf":0.05555555555555555},"interfaces/CreateProjectAppReqPayload.html":{"ref":"interfaces/CreateProjectAppReqPayload.html","tf":0.03},"interfaces/DeleteProjectAppReqPayload.html":{"ref":"interfaces/DeleteProjectAppReqPayload.html","tf":0.034482758620689655},"interfaces/GetProjectAppReqPayload.html":{"ref":"interfaces/GetProjectAppReqPayload.html","tf":0.034482758620689655},"interfaces/UpdateProjectAppReqDto.html":{"ref":"interfaces/UpdateProjectAppReqDto.html","tf":0.05555555555555555},"interfaces/UpdateProjectAppReqPayload.html":{"ref":"interfaces/UpdateProjectAppReqPayload.html","tf":0.02857142857142857}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"_":{"docs":{},"f":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.005813953488372093},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.005813953488372093},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.005813953488372093},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.005813953488372093},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.005813953488372093}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.030100334448160536},"interfaces/AllProjectAppReqPayload.html":{"ref":"interfaces/AllProjectAppReqPayload.html","tf":0.036585365853658534},"interfaces/CreateProjectAppReqPayload.html":{"ref":"interfaces/CreateProjectAppReqPayload.html","tf":0.03},"interfaces/DeleteProjectAppReqPayload.html":{"ref":"interfaces/DeleteProjectAppReqPayload.html","tf":0.05747126436781609},"interfaces/GetProjectAppReqPayload.html":{"ref":"interfaces/GetProjectAppReqPayload.html","tf":0.05747126436781609},"interfaces/UpdateProjectAppReqPayload.html":{"ref":"interfaces/UpdateProjectAppReqPayload.html","tf":0.047619047619047616}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.0033444816053511705}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":5.006688963210703},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.08695652173913043}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":5.0120481927710845},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}}}}}}},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.010526315789473684}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":5.021052631578947},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}}}}}}}},"/":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.005291005291005291}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"interfaces/ResponseDto.html":{"ref":"interfaces/ResponseDto.html","tf":0.015625}}}}}}}}},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.008583690987124463}},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.030100334448160536},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.006024096385542169},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.010526315789473684},"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.016},"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.004694835680751174},"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.037037037037037035},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0330188679245283}}}}}},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.016722408026755852},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.006024096385542169},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.010526315789473684},"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.016},"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.004694835680751174},"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.021164021164021163},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.014150943396226415}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.024096385542168676},"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.008},"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.014084507042253521},"injectables/ResponseInterceptor.html":{"ref":"injectables/ResponseInterceptor.html","tf":0.015384615384615385},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715}}}}}}},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.012048192771084338},"injectables/ExceptionInterceptor.html":{"ref":"injectables/ExceptionInterceptor.html","tf":0.016129032258064516},"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.004694835680751174}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.031578947368421054},"interfaces/JWTPayload.html":{"ref":"interfaces/JWTPayload.html","tf":0.0136986301369863},"interfaces/LogInByEmailAndPassword.html":{"ref":"interfaces/LogInByEmailAndPassword.html","tf":0.014705882352941176},"interfaces/LogInByRefreshToken.html":{"ref":"interfaces/LogInByRefreshToken.html","tf":0.015873015873015872},"interfaces/LogInResponseDto.html":{"ref":"interfaces/LogInResponseDto.html","tf":0.04225352112676056},"interfaces/RegisterByEmailAndPasswordDto.html":{"ref":"interfaces/RegisterByEmailAndPasswordDto.html","tf":0.01282051282051282},"interfaces/RegisterResponseDto.html":{"ref":"interfaces/RegisterResponseDto.html","tf":0.014705882352941176}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{"interfaces/ResponseDto.html":{"ref":"interfaces/ResponseDto.html","tf":0.015625}}}}}},"r":{"docs":{},"g":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.006024096385542169},"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.009389671361502348}}}}}}}},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.014084507042253521}}}}}},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.030303030303030304},"classes/GatewayController.html":{"ref":"classes/GatewayController.html","tf":0.03225806451612903}},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.06060606060606061},"classes/GatewayController.html":{"ref":"classes/GatewayController.html","tf":0.06451612903225806}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}}},"s":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":5.0606060606060606},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}}}}}}}}}},"d":{"docs":{},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.0033444816053511705},"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.008},"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.021164021164021163},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.014150943396226415},"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":5.011627906976744},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.005813953488372093},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.005813953488372093},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.005813953488372093},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.005813953488372093},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}},"e":{"docs":{},"(":{"docs":{},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"_":{"docs":{},"f":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.010033444816053512}}}}}}}}}}}}}}},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.0033444816053511705}}}}}}}}}}}},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715}}}}}}}}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.008}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"_":{"docs":{},"f":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"_":{"docs":{},"f":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"classes/BadRequestAlertException.html":{"ref":"classes/BadRequestAlertException.html","tf":5.033333333333333},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.030303030303030304},"classes/GatewayController.html":{"ref":"classes/GatewayController.html","tf":0.03225806451612903},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.030303030303030304},"classes/GatewayController.html":{"ref":"classes/GatewayController.html","tf":0.03225806451612903}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.021052631578947368},"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.009389671361502348},"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.023255813953488372},"classes/BadRequestAlertException.html":{"ref":"classes/BadRequestAlertException.html","tf":0.016666666666666666},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.023255813953488372},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.023255813953488372},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.023255813953488372},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.029069767441860465},"interfaces/ResponseDto.html":{"ref":"interfaces/ResponseDto.html","tf":0.0625}}}}}}}},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.008583690987124463}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555}}}}}}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.006024096385542169}}}}}}},"c":{"docs":{},"r":{"docs":{},"y":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/HashService.html":{"ref":"injectables/HashService.html","tf":0.037037037037037035}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/HashService.html":{"ref":"injectables/HashService.html","tf":0.018518518518518517}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/HashService.html":{"ref":"injectables/HashService.html","tf":0.018518518518518517}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.009389671361502348}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}}}},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.02575107296137339},"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.005291005291005291}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.005291005291005291}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.008583690987124463}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.010526315789473684},"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.016}},"i":{"docs":{},"d":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.0033444816053511705}}}},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.031578947368421054},"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.024}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555},"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.0033444816053511705},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.006024096385542169},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.010526315789473684},"injectables/ExceptionInterceptor.html":{"ref":"injectables/ExceptionInterceptor.html","tf":0.016129032258064516},"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.008},"injectables/HashService.html":{"ref":"injectables/HashService.html","tf":0.018518518518518517},"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.004694835680751174},"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.005291005291005291},"injectables/ResponseInterceptor.html":{"ref":"injectables/ResponseInterceptor.html","tf":0.015384615384615385},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715},"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":5.02906976744186},"classes/BadRequestAlertException.html":{"ref":"classes/BadRequestAlertException.html","tf":5.033333333333333},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":5.0606060606060606},"classes/GatewayController.html":{"ref":"classes/GatewayController.html","tf":5.064516129032258},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":5.02906976744186},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":5.02906976744186},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":5.02906976744186},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.023255813953488372},"interfaces/ResponseDto.html":{"ref":"interfaces/ResponseDto.html","tf":0.015625},"coverage.html":{"ref":"coverage.html","tf":0.036458333333333336}}}}}},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}},"p":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.021052631578947368}},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.010526315789473684}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{"injectables/HashService.html":{"ref":"injectables/HashService.html","tf":0.018518518518518517}},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/HashService.html":{"ref":"injectables/HashService.html","tf":0.037037037037037035}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232},"coverage.html":{"ref":"coverage.html","tf":10.005208333333334}}}}}}},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.013377926421404682},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.030120481927710843},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.031578947368421054},"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.008},"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.03755868544600939},"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.015873015873015872},"injectables/ResponseInterceptor.html":{"ref":"injectables/ResponseInterceptor.html","tf":0.015384615384615385},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.014150943396226415}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.006688963210702341},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.012048192771084338},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.021052631578947368},"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.016},"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.009389671361502348},"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.010582010582010581},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.009433962264150943},"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.005813953488372093},"classes/BadRequestAlertException.html":{"ref":"classes/BadRequestAlertException.html","tf":0.016666666666666666},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.005813953488372093},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.005813953488372093},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.005813953488372093}},"(":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.0033444816053511705}}}}}}}}}},"j":{"docs":{},"w":{"docs":{},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.006024096385542169}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.010526315789473684}}}},"o":{"docs":{},"d":{"docs":{"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.005813953488372093},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.005813953488372093},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.005813953488372093},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.005813953488372093},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.005813953488372093}}}}},"d":{"docs":{},"y":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.008}}}}}}},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.004694835680751174}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.005813953488372093},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.005813953488372093},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.005813953488372093},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.005813953488372093},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.005813953488372093}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.005291005291005291}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.011627906976744186},"classes/BadRequestAlertException.html":{"ref":"classes/BadRequestAlertException.html","tf":0.03333333333333333},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.011627906976744186},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.011627906976744186},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.011627906976744186},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.004694835680751174}}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.006024096385542169}}}}},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.024096385542168676},"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.018779342723004695},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.018867924528301886}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.006024096385542169}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.006024096385542169}}}}}}}}}},"s":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"t":{"docs":{},"o":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.004694835680751174}},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"(":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.004694835680751174}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.011627906976744186},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.011627906976744186},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.011627906976744186},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.011627906976744186},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.011627906976744186}}}},"r":{"docs":{},"e":{"docs":{},"/":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"/":{"docs":{},"b":{"docs":{},"a":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"/":{"docs":{},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.004694835680751174}},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.023411371237458192},"interfaces/AllProjectAppReqPayload.html":{"ref":"interfaces/AllProjectAppReqPayload.html","tf":0.024390243902439025},"interfaces/CreateProjectAppReqDto.html":{"ref":"interfaces/CreateProjectAppReqDto.html","tf":0.07407407407407407},"interfaces/CreateProjectAppReqPayload.html":{"ref":"interfaces/CreateProjectAppReqPayload.html","tf":0.04},"interfaces/DeleteProjectAppReqPayload.html":{"ref":"interfaces/DeleteProjectAppReqPayload.html","tf":0.022988505747126436},"interfaces/GetProjectAppReqPayload.html":{"ref":"interfaces/GetProjectAppReqPayload.html","tf":0.022988505747126436},"interfaces/UpdateProjectAppReqDto.html":{"ref":"interfaces/UpdateProjectAppReqDto.html","tf":0.07407407407407407},"interfaces/UpdateProjectAppReqPayload.html":{"ref":"interfaces/UpdateProjectAppReqPayload.html","tf":0.0380952380952381}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"injectables/ExceptionInterceptor.html":{"ref":"injectables/ExceptionInterceptor.html","tf":0.03225806451612903},"injectables/ResponseInterceptor.html":{"ref":"injectables/ResponseInterceptor.html","tf":0.03076923076923077}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.018072289156626505}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.012048192771084338}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.006024096385542169},"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.004694835680751174}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/ExceptionInterceptor.html":{"ref":"injectables/ExceptionInterceptor.html","tf":0.016129032258064516}},"(":{"docs":{},"(":{"docs":{"injectables/ExceptionInterceptor.html":{"ref":"injectables/ExceptionInterceptor.html","tf":0.016129032258064516}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.006688963210702341},"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.005291005291005291}},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.0033444816053511705},"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.010582010582010581}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.016},"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.004694835680751174}},"(":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.008},"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.009389671361502348}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.014084507042253521}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"interfaces/AllProjectAppReqPayload.html":{"ref":"interfaces/AllProjectAppReqPayload.html","tf":0.012195121951219513},"interfaces/CreateProjectAppReqPayload.html":{"ref":"interfaces/CreateProjectAppReqPayload.html","tf":5.02},"interfaces/DeleteProjectAppReqPayload.html":{"ref":"interfaces/DeleteProjectAppReqPayload.html","tf":0.011494252873563218},"interfaces/GetProjectAppReqPayload.html":{"ref":"interfaces/GetProjectAppReqPayload.html","tf":0.011494252873563218},"interfaces/UpdateProjectAppReqPayload.html":{"ref":"interfaces/UpdateProjectAppReqPayload.html","tf":0.009523809523809525},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}}}}}}}}},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"interfaces/CreateProjectAppReqDto.html":{"ref":"interfaces/CreateProjectAppReqDto.html","tf":5.037037037037037},"interfaces/UpdateProjectAppReqDto.html":{"ref":"interfaces/UpdateProjectAppReqDto.html","tf":0.018518518518518517},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"interfaces/CreateFirestoreRecord.html":{"ref":"interfaces/CreateFirestoreRecord.html","tf":5.08},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"interfaces/ResponseDto.html":{"ref":"interfaces/ResponseDto.html","tf":0.015625}}}},"b":{"docs":{},"i":{"docs":{"interfaces/ResponseDto.html":{"ref":"interfaces/ResponseDto.html","tf":0.015625}}}}}}}}},"y":{"docs":{},"p":{"docs":{},"t":{"docs":{},"o":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.0033444816053511705}}}}}}}},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}},"e":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}}},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"y":{"docs":{"index.html":{"ref":"index.html","tf":0.034334763948497854}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232},"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.0033444816053511705},"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.037037037037037035},"interfaces/AllProjectAppReqPayload.html":{"ref":"interfaces/AllProjectAppReqPayload.html","tf":0.024390243902439025},"interfaces/CreateProjectAppReqDto.html":{"ref":"interfaces/CreateProjectAppReqDto.html","tf":0.07407407407407407},"interfaces/CreateProjectAppReqPayload.html":{"ref":"interfaces/CreateProjectAppReqPayload.html","tf":0.04},"interfaces/DeleteProjectAppReqPayload.html":{"ref":"interfaces/DeleteProjectAppReqPayload.html","tf":0.022988505747126436},"interfaces/GetProjectAppReqPayload.html":{"ref":"interfaces/GetProjectAppReqPayload.html","tf":0.022988505747126436},"interfaces/GetProjectByIdReqPayload.html":{"ref":"interfaces/GetProjectByIdReqPayload.html","tf":0.02631578947368421},"interfaces/NewProjectDto.html":{"ref":"interfaces/NewProjectDto.html","tf":0.10714285714285714},"interfaces/NewProjectReqPayload.html":{"ref":"interfaces/NewProjectReqPayload.html","tf":0.06976744186046512},"interfaces/UpdateProjectAppReqDto.html":{"ref":"interfaces/UpdateProjectAppReqDto.html","tf":0.07407407407407407},"interfaces/UpdateProjectAppReqPayload.html":{"ref":"interfaces/UpdateProjectAppReqPayload.html","tf":0.0380952380952381}}}}}},"t":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.020066889632107024}}}}}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}}},"t":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.0033444816053511705}},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.006688963210702341}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"interfaces/AllProjectAppReqPayload.html":{"ref":"interfaces/AllProjectAppReqPayload.html","tf":0.012195121951219513},"interfaces/CreateProjectAppReqPayload.html":{"ref":"interfaces/CreateProjectAppReqPayload.html","tf":0.01},"interfaces/DeleteProjectAppReqPayload.html":{"ref":"interfaces/DeleteProjectAppReqPayload.html","tf":5.022988505747127},"interfaces/GetProjectAppReqPayload.html":{"ref":"interfaces/GetProjectAppReqPayload.html","tf":0.011494252873563218},"interfaces/UpdateProjectAppReqPayload.html":{"ref":"interfaces/UpdateProjectAppReqPayload.html","tf":0.009523809523809525},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/HashService.html":{"ref":"injectables/HashService.html","tf":0.018518518518518517},"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.011627906976744186},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.011627906976744186},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.011627906976744186},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.011627906976744186},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.005813953488372093},"interfaces/ResponseDto.html":{"ref":"interfaces/ResponseDto.html","tf":0.015625},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.043478260869565216}}}}}}}},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.024096385542168676},"injectables/ExceptionInterceptor.html":{"ref":"injectables/ExceptionInterceptor.html","tf":0.03225806451612903},"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.008},"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.023474178403755867},"injectables/ResponseInterceptor.html":{"ref":"injectables/ResponseInterceptor.html","tf":0.015384615384615385},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715}}}}}},"v":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.008583690987124463},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{"injectables/ExceptionInterceptor.html":{"ref":"injectables/ExceptionInterceptor.html","tf":0.016129032258064516},"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.009389671361502348},"injectables/ResponseInterceptor.html":{"ref":"injectables/ResponseInterceptor.html","tf":0.015384615384615385},"classes/BadRequestAlertException.html":{"ref":"classes/BadRequestAlertException.html","tf":0.016666666666666666},"interfaces/ResponseDto.html":{"ref":"interfaces/ResponseDto.html","tf":0.078125}},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"`":{"docs":{},"$":{"docs":{},"{":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"[":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.004694835680751174}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.024},"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.018779342723004695},"injectables/ResponseInterceptor.html":{"ref":"injectables/ResponseInterceptor.html","tf":0.03076923076923077},"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.03488372093023256},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.03488372093023256},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.03488372093023256},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.03488372093023256},"interfaces/CreateFirestoreRecord.html":{"ref":"interfaces/CreateFirestoreRecord.html","tf":0.12},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.03488372093023256},"interfaces/ResponseDto.html":{"ref":"interfaces/ResponseDto.html","tf":0.046875}},"[":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.028169014084507043}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.014084507042253521}},"e":{"docs":{},"[":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.03286384976525822}}}}}}}}}}}}},"y":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.008}}}}}}},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.032},"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.004694835680751174}},".":{"docs":{},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.008}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.004694835680751174}}}}}}},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.08695652173913043}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.005813953488372093},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.005813953488372093},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.005813953488372093},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.005813953488372093},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.005813953488372093}}}}}}}}}}}},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.005813953488372093},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.005813953488372093},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.005813953488372093},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.005813953488372093},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}},"e":{"2":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}},"docs":{"injectables/ExceptionInterceptor.html":{"ref":"injectables/ExceptionInterceptor.html","tf":0.016129032258064516}},"f":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.008583690987124463}}}}}}},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}}}}}}},"x":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.0033444816053511705},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.006024096385542169},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.010526315789473684},"injectables/ExceptionInterceptor.html":{"ref":"injectables/ExceptionInterceptor.html","tf":0.016129032258064516},"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.008},"injectables/HashService.html":{"ref":"injectables/HashService.html","tf":0.018518518518518517},"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.004694835680751174},"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.005291005291005291},"injectables/ResponseInterceptor.html":{"ref":"injectables/ResponseInterceptor.html","tf":0.015384615384615385},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715},"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.029069767441860465},"classes/BadRequestAlertException.html":{"ref":"classes/BadRequestAlertException.html","tf":0.016666666666666666},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.030303030303030304},"classes/GatewayController.html":{"ref":"classes/GatewayController.html","tf":0.03225806451612903},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.029069767441860465},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.029069767441860465},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.029069767441860465},"interfaces/AllProjectAppReqPayload.html":{"ref":"interfaces/AllProjectAppReqPayload.html","tf":0.06097560975609756},"interfaces/CreateFirestoreRecord.html":{"ref":"interfaces/CreateFirestoreRecord.html","tf":0.04},"interfaces/CreateProjectAppReqDto.html":{"ref":"interfaces/CreateProjectAppReqDto.html","tf":0.037037037037037035},"interfaces/CreateProjectAppReqPayload.html":{"ref":"interfaces/CreateProjectAppReqPayload.html","tf":0.05},"interfaces/DeleteProjectAppReqPayload.html":{"ref":"interfaces/DeleteProjectAppReqPayload.html","tf":0.05747126436781609},"interfaces/GetProjectAppReqPayload.html":{"ref":"interfaces/GetProjectAppReqPayload.html","tf":0.05747126436781609},"interfaces/GetProjectByIdReqPayload.html":{"ref":"interfaces/GetProjectByIdReqPayload.html","tf":0.05263157894736842},"interfaces/JWTPayload.html":{"ref":"interfaces/JWTPayload.html","tf":0.0821917808219178},"interfaces/LogInByEmailAndPassword.html":{"ref":"interfaces/LogInByEmailAndPassword.html","tf":0.08823529411764706},"interfaces/LogInByRefreshToken.html":{"ref":"interfaces/LogInByRefreshToken.html","tf":0.09523809523809523},"interfaces/LogInResponseDto.html":{"ref":"interfaces/LogInResponseDto.html","tf":0.08450704225352113},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.029069767441860465},"interfaces/NewProjectDto.html":{"ref":"interfaces/NewProjectDto.html","tf":0.03571428571428571},"interfaces/NewProjectReqPayload.html":{"ref":"interfaces/NewProjectReqPayload.html","tf":0.046511627906976744},"interfaces/RegisterByEmailAndPasswordDto.html":{"ref":"interfaces/RegisterByEmailAndPasswordDto.html","tf":0.07692307692307693},"interfaces/RegisterResponseDto.html":{"ref":"interfaces/RegisterResponseDto.html","tf":0.08823529411764706},"interfaces/ResponseDto.html":{"ref":"interfaces/ResponseDto.html","tf":0.03125},"interfaces/UpdateProjectAppReqDto.html":{"ref":"interfaces/UpdateProjectAppReqDto.html","tf":0.037037037037037035},"interfaces/UpdateProjectAppReqPayload.html":{"ref":"interfaces/UpdateProjectAppReqPayload.html","tf":0.047619047619047616}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.006024096385542169}}}}}},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715}}}}}}}}},"e":{"docs":{},"c":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715}},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.018072289156626505},"injectables/ExceptionInterceptor.html":{"ref":"injectables/ExceptionInterceptor.html","tf":0.04838709677419355},"injectables/ResponseInterceptor.html":{"ref":"injectables/ResponseInterceptor.html","tf":0.046153846153846156}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.006024096385542169}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.012048192771084338}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"classes/BadRequestAlertException.html":{"ref":"classes/BadRequestAlertException.html","tf":0.016666666666666666}}}}}},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/ExceptionInterceptor.html":{"ref":"injectables/ExceptionInterceptor.html","tf":5.032258064516129},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}}}}}}}}}}}}},"s":{"docs":{},"/":{"docs":{},"b":{"docs":{},"a":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"classes/GatewayController.html":{"ref":"classes/GatewayController.html","tf":0.03225806451612903}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.005813953488372093},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.005813953488372093},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.005813953488372093},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.005813953488372093},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.005813953488372093}}}}}},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.0033444816053511705},"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.005291005291005291}}}}}}}}},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.024096385542168676},"injectables/ExceptionInterceptor.html":{"ref":"injectables/ExceptionInterceptor.html","tf":0.03225806451612903},"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.008},"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.023474178403755867},"injectables/ResponseInterceptor.html":{"ref":"injectables/ResponseInterceptor.html","tf":0.015384615384615385},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715}},"/":{"docs":{},"n":{"docs":{},"o":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.030120481927710843},"injectables/ExceptionInterceptor.html":{"ref":"injectables/ExceptionInterceptor.html","tf":0.03225806451612903},"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.016},"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.04225352112676056},"injectables/ResponseInterceptor.html":{"ref":"injectables/ResponseInterceptor.html","tf":0.015384615384615385},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.010526315789473684},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.03773584905660377},"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.011627906976744186},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.011627906976744186},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.011627906976744186},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.011627906976744186},"interfaces/JWTPayload.html":{"ref":"interfaces/JWTPayload.html","tf":0.0821917808219178},"interfaces/LogInByEmailAndPassword.html":{"ref":"interfaces/LogInByEmailAndPassword.html","tf":0.08823529411764706},"interfaces/LogInByRefreshToken.html":{"ref":"interfaces/LogInByRefreshToken.html","tf":0.06349206349206349},"interfaces/LogInResponseDto.html":{"ref":"interfaces/LogInResponseDto.html","tf":0.056338028169014086},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.011627906976744186},"interfaces/RegisterByEmailAndPasswordDto.html":{"ref":"interfaces/RegisterByEmailAndPasswordDto.html","tf":0.07692307692307693},"interfaces/RegisterResponseDto.html":{"ref":"interfaces/RegisterResponseDto.html","tf":0.08823529411764706}},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"_":{"docs":{},"f":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.005813953488372093},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.005813953488372093},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.005813953488372093},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.005813953488372093},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.005813953488372093}}}}}}}}}}}}}}}},"[":{"docs":{},"'":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{"injectables/ExceptionInterceptor.html":{"ref":"injectables/ExceptionInterceptor.html","tf":0.016129032258064516}}}}}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.004694835680751174},"injectables/ResponseInterceptor.html":{"ref":"injectables/ResponseInterceptor.html","tf":0.015384615384615385},"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.03488372093023256},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.03488372093023256},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.03488372093023256},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.03488372093023256},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.03488372093023256},"interfaces/ResponseDto.html":{"ref":"interfaces/ResponseDto.html","tf":0.046875}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/ResponseInterceptor.html":{"ref":"injectables/ResponseInterceptor.html","tf":0.015384615384615385},"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.03488372093023256},"classes/BadRequestAlertException.html":{"ref":"classes/BadRequestAlertException.html","tf":0.08333333333333333},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.03488372093023256},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.03488372093023256},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.03488372093023256},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.03488372093023256},"interfaces/ResponseDto.html":{"ref":"interfaces/ResponseDto.html","tf":0.046875}}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}},"l":{"docs":{},"s":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.0033444816053511705},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.010526315789473684},"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.004694835680751174},"injectables/ResponseInterceptor.html":{"ref":"injectables/ResponseInterceptor.html","tf":0.015384615384615385},"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.005813953488372093},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.005813953488372093},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.005813953488372093},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.005813953488372093},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.005813953488372093},"interfaces/ResponseDto.html":{"ref":"interfaces/ResponseDto.html","tf":0.015625}}}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}}},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.017167381974248927}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.005813953488372093},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.005813953488372093},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.005813953488372093},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.005813953488372093},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.005813953488372093}}}}}},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.012875536480686695}}}}}}}}},"o":{"docs":{},"m":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.004694835680751174}},"e":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.009389671361502348}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.0033444816053511705},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.006024096385542169},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.010526315789473684},"injectables/ExceptionInterceptor.html":{"ref":"injectables/ExceptionInterceptor.html","tf":0.016129032258064516},"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.008},"injectables/HashService.html":{"ref":"injectables/HashService.html","tf":0.018518518518518517},"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.004694835680751174},"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.005291005291005291},"injectables/ResponseInterceptor.html":{"ref":"injectables/ResponseInterceptor.html","tf":0.015384615384615385},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715},"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.005813953488372093},"classes/BadRequestAlertException.html":{"ref":"classes/BadRequestAlertException.html","tf":0.016666666666666666},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.030303030303030304},"classes/GatewayController.html":{"ref":"classes/GatewayController.html","tf":0.03225806451612903},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.005813953488372093},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.005813953488372093},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.005813953488372093},"interfaces/AllProjectAppReqPayload.html":{"ref":"interfaces/AllProjectAppReqPayload.html","tf":0.012195121951219513},"interfaces/CreateFirestoreRecord.html":{"ref":"interfaces/CreateFirestoreRecord.html","tf":0.04},"interfaces/CreateProjectAppReqDto.html":{"ref":"interfaces/CreateProjectAppReqDto.html","tf":0.018518518518518517},"interfaces/CreateProjectAppReqPayload.html":{"ref":"interfaces/CreateProjectAppReqPayload.html","tf":0.01},"interfaces/DeleteProjectAppReqPayload.html":{"ref":"interfaces/DeleteProjectAppReqPayload.html","tf":0.011494252873563218},"interfaces/GetProjectAppReqPayload.html":{"ref":"interfaces/GetProjectAppReqPayload.html","tf":0.011494252873563218},"interfaces/GetProjectByIdReqPayload.html":{"ref":"interfaces/GetProjectByIdReqPayload.html","tf":0.02631578947368421},"interfaces/JWTPayload.html":{"ref":"interfaces/JWTPayload.html","tf":0.0136986301369863},"interfaces/LogInByEmailAndPassword.html":{"ref":"interfaces/LogInByEmailAndPassword.html","tf":0.014705882352941176},"interfaces/LogInByRefreshToken.html":{"ref":"interfaces/LogInByRefreshToken.html","tf":0.015873015873015872},"interfaces/LogInResponseDto.html":{"ref":"interfaces/LogInResponseDto.html","tf":0.014084507042253521},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.005813953488372093},"interfaces/NewProjectDto.html":{"ref":"interfaces/NewProjectDto.html","tf":0.03571428571428571},"interfaces/NewProjectReqPayload.html":{"ref":"interfaces/NewProjectReqPayload.html","tf":0.023255813953488372},"interfaces/RegisterByEmailAndPasswordDto.html":{"ref":"interfaces/RegisterByEmailAndPasswordDto.html","tf":0.01282051282051282},"interfaces/RegisterResponseDto.html":{"ref":"interfaces/RegisterResponseDto.html","tf":0.014705882352941176},"interfaces/ResponseDto.html":{"ref":"interfaces/ResponseDto.html","tf":0.015625},"interfaces/UpdateProjectAppReqDto.html":{"ref":"interfaces/UpdateProjectAppReqDto.html","tf":0.018518518518518517},"interfaces/UpdateProjectAppReqPayload.html":{"ref":"interfaces/UpdateProjectAppReqPayload.html","tf":0.009523809523809525},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}}}},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.056}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.008},"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.004694835680751174}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.008}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":5.016},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}}}}}}}},"/":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.004694835680751174}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.018867924528301886},"interfaces/JWTPayload.html":{"ref":"interfaces/JWTPayload.html","tf":0.0136986301369863},"interfaces/LogInByEmailAndPassword.html":{"ref":"interfaces/LogInByEmailAndPassword.html","tf":0.014705882352941176},"interfaces/LogInByRefreshToken.html":{"ref":"interfaces/LogInByRefreshToken.html","tf":0.015873015873015872},"interfaces/LogInResponseDto.html":{"ref":"interfaces/LogInResponseDto.html","tf":0.014084507042253521},"interfaces/RegisterByEmailAndPasswordDto.html":{"ref":"interfaces/RegisterByEmailAndPasswordDto.html","tf":0.038461538461538464},"interfaces/RegisterResponseDto.html":{"ref":"interfaces/RegisterResponseDto.html","tf":0.014705882352941176}}}}}}}},"n":{"docs":{},"d":{"docs":{"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.005813953488372093},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.005813953488372093},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.005813953488372093},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.005813953488372093},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.005813953488372093}},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.005291005291005291}},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.010582010582010581}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"b":{"docs":{},"y":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715}},"(":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.009433962264150943}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.009433962264150943}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}},"o":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.006688963210702341}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"classes/BadRequestAlertException.html":{"ref":"classes/BadRequestAlertException.html","tf":0.05}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"interfaces/AllProjectAppReqPayload.html":{"ref":"interfaces/AllProjectAppReqPayload.html","tf":0.012195121951219513},"interfaces/CreateProjectAppReqPayload.html":{"ref":"interfaces/CreateProjectAppReqPayload.html","tf":0.01},"interfaces/DeleteProjectAppReqPayload.html":{"ref":"interfaces/DeleteProjectAppReqPayload.html","tf":0.011494252873563218},"interfaces/GetProjectAppReqPayload.html":{"ref":"interfaces/GetProjectAppReqPayload.html","tf":5.022988505747127},"interfaces/UpdateProjectAppReqPayload.html":{"ref":"interfaces/UpdateProjectAppReqPayload.html","tf":0.009523809523809525},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}}}}}}}}}}}}}}},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"interfaces/GetProjectByIdReqPayload.html":{"ref":"interfaces/GetProjectByIdReqPayload.html","tf":5.052631578947368},"interfaces/NewProjectReqPayload.html":{"ref":"interfaces/NewProjectReqPayload.html","tf":0.023255813953488372},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"classes/GatewayController.html":{"ref":"classes/GatewayController.html","tf":5.064516129032258},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}},"e":{"docs":{},"r":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.006024096385542169}}}}}}},"s":{"docs":{},"h":{"docs":{"injectables/HashService.html":{"ref":"injectables/HashService.html","tf":0.07407407407407407}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.013377926421404682},"injectables/HashService.html":{"ref":"injectables/HashService.html","tf":5.037037037037037},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.018867924528301886},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}}}}}}}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/HashService.html":{"ref":"injectables/HashService.html","tf":0.037037037037037035}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.008583690987124463}}}},"r":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.006024096385542169}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"j":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"classes/BadRequestAlertException.html":{"ref":"classes/BadRequestAlertException.html","tf":0.016666666666666666}},"s":{"docs":{},".":{"docs":{},"b":{"docs":{},"a":{"docs":{},"d":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"classes/BadRequestAlertException.html":{"ref":"classes/BadRequestAlertException.html","tf":0.016666666666666666}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"classes/BadRequestAlertException.html":{"ref":"classes/BadRequestAlertException.html","tf":0.03333333333333333}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":5}}}}},"f":{"docs":{},"o":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.0033444816053511705},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.006024096385542169},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.010526315789473684},"injectables/ExceptionInterceptor.html":{"ref":"injectables/ExceptionInterceptor.html","tf":0.016129032258064516},"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.008},"injectables/HashService.html":{"ref":"injectables/HashService.html","tf":0.018518518518518517},"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.004694835680751174},"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.005291005291005291},"injectables/ResponseInterceptor.html":{"ref":"injectables/ResponseInterceptor.html","tf":0.015384615384615385},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715},"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.005813953488372093},"classes/BadRequestAlertException.html":{"ref":"classes/BadRequestAlertException.html","tf":0.016666666666666666},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.030303030303030304},"classes/GatewayController.html":{"ref":"classes/GatewayController.html","tf":0.03225806451612903},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.005813953488372093},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.005813953488372093},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.005813953488372093},"interfaces/AllProjectAppReqPayload.html":{"ref":"interfaces/AllProjectAppReqPayload.html","tf":0.012195121951219513},"interfaces/CreateFirestoreRecord.html":{"ref":"interfaces/CreateFirestoreRecord.html","tf":0.04},"interfaces/CreateProjectAppReqDto.html":{"ref":"interfaces/CreateProjectAppReqDto.html","tf":0.018518518518518517},"interfaces/CreateProjectAppReqPayload.html":{"ref":"interfaces/CreateProjectAppReqPayload.html","tf":0.01},"interfaces/DeleteProjectAppReqPayload.html":{"ref":"interfaces/DeleteProjectAppReqPayload.html","tf":0.011494252873563218},"interfaces/GetProjectAppReqPayload.html":{"ref":"interfaces/GetProjectAppReqPayload.html","tf":0.011494252873563218},"interfaces/GetProjectByIdReqPayload.html":{"ref":"interfaces/GetProjectByIdReqPayload.html","tf":0.02631578947368421},"interfaces/JWTPayload.html":{"ref":"interfaces/JWTPayload.html","tf":0.0136986301369863},"interfaces/LogInByEmailAndPassword.html":{"ref":"interfaces/LogInByEmailAndPassword.html","tf":0.014705882352941176},"interfaces/LogInByRefreshToken.html":{"ref":"interfaces/LogInByRefreshToken.html","tf":0.015873015873015872},"interfaces/LogInResponseDto.html":{"ref":"interfaces/LogInResponseDto.html","tf":0.014084507042253521},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.005813953488372093},"interfaces/NewProjectDto.html":{"ref":"interfaces/NewProjectDto.html","tf":0.03571428571428571},"interfaces/NewProjectReqPayload.html":{"ref":"interfaces/NewProjectReqPayload.html","tf":0.023255813953488372},"interfaces/RegisterByEmailAndPasswordDto.html":{"ref":"interfaces/RegisterByEmailAndPasswordDto.html","tf":0.01282051282051282},"interfaces/RegisterResponseDto.html":{"ref":"interfaces/RegisterResponseDto.html","tf":0.014705882352941176},"interfaces/ResponseDto.html":{"ref":"interfaces/ResponseDto.html","tf":0.015625},"interfaces/UpdateProjectAppReqDto.html":{"ref":"interfaces/UpdateProjectAppReqDto.html","tf":0.018518518518518517},"interfaces/UpdateProjectAppReqPayload.html":{"ref":"interfaces/UpdateProjectAppReqPayload.html","tf":0.009523809523809525}},"r":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}},"r":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"i":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}}}}}}},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.009389671361502348}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555},"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.005813953488372093},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.005813953488372093},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.005813953488372093},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.005813953488372093},"interfaces/AllProjectAppReqPayload.html":{"ref":"interfaces/AllProjectAppReqPayload.html","tf":5.073170731707317},"interfaces/CreateFirestoreRecord.html":{"ref":"interfaces/CreateFirestoreRecord.html","tf":5.08},"interfaces/CreateProjectAppReqDto.html":{"ref":"interfaces/CreateProjectAppReqDto.html","tf":5.055555555555555},"interfaces/CreateProjectAppReqPayload.html":{"ref":"interfaces/CreateProjectAppReqPayload.html","tf":5.06},"interfaces/DeleteProjectAppReqPayload.html":{"ref":"interfaces/DeleteProjectAppReqPayload.html","tf":5.068965517241379},"interfaces/GetProjectAppReqPayload.html":{"ref":"interfaces/GetProjectAppReqPayload.html","tf":5.068965517241379},"interfaces/GetProjectByIdReqPayload.html":{"ref":"interfaces/GetProjectByIdReqPayload.html","tf":5.078947368421052},"interfaces/JWTPayload.html":{"ref":"interfaces/JWTPayload.html","tf":5.095890410958904},"interfaces/LogInByEmailAndPassword.html":{"ref":"interfaces/LogInByEmailAndPassword.html","tf":5.102941176470588},"interfaces/LogInByRefreshToken.html":{"ref":"interfaces/LogInByRefreshToken.html","tf":5.111111111111111},"interfaces/LogInResponseDto.html":{"ref":"interfaces/LogInResponseDto.html","tf":5.098591549295775},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":5.011627906976744},"interfaces/NewProjectDto.html":{"ref":"interfaces/NewProjectDto.html","tf":5.071428571428571},"interfaces/NewProjectReqPayload.html":{"ref":"interfaces/NewProjectReqPayload.html","tf":5.069767441860465},"interfaces/RegisterByEmailAndPasswordDto.html":{"ref":"interfaces/RegisterByEmailAndPasswordDto.html","tf":5.089743589743589},"interfaces/RegisterResponseDto.html":{"ref":"interfaces/RegisterResponseDto.html","tf":5.102941176470588},"interfaces/ResponseDto.html":{"ref":"interfaces/ResponseDto.html","tf":5.03125},"interfaces/UpdateProjectAppReqDto.html":{"ref":"interfaces/UpdateProjectAppReqDto.html","tf":5.055555555555555},"interfaces/UpdateProjectAppReqPayload.html":{"ref":"interfaces/UpdateProjectAppReqPayload.html","tf":5.057142857142857},"coverage.html":{"ref":"coverage.html","tf":0.09895833333333333}}}}},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/ExceptionInterceptor.html":{"ref":"injectables/ExceptionInterceptor.html","tf":0.016129032258064516},"injectables/ResponseInterceptor.html":{"ref":"injectables/ResponseInterceptor.html","tf":0.015384615384615385}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"injectables/ExceptionInterceptor.html":{"ref":"injectables/ExceptionInterceptor.html","tf":0.03225806451612903},"injectables/ResponseInterceptor.html":{"ref":"injectables/ResponseInterceptor.html","tf":0.03076923076923077}}}}}}}}}}}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555},"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":5.010033444816053},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":5.018072289156627},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":5.042105263157895},"injectables/ExceptionInterceptor.html":{"ref":"injectables/ExceptionInterceptor.html","tf":5.048387096774194},"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":5.032},"injectables/HashService.html":{"ref":"injectables/HashService.html","tf":5.055555555555555},"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":5.014084507042254},"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":5.015873015873016},"injectables/ResponseInterceptor.html":{"ref":"injectables/ResponseInterceptor.html","tf":5.046153846153846},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":5.014150943396227},"coverage.html":{"ref":"coverage.html","tf":0.052083333333333336}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.0033444816053511705},"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.008},"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.004694835680751174},"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.005291005291005291},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715}},"(":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.0033444816053511705}}}}}}}}},"d":{"docs":{},"y":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.008},"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.004694835680751174}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.005291005291005291}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715}}}}}}}}}}}}}}}},"(":{"docs":{},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},".":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.010526315789473684}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.008}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.01744186046511628},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.01744186046511628},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.01744186046511628},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.01744186046511628},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.01744186046511628}},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.005813953488372093},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.005813953488372093},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.005813953488372093},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.005813953488372093},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.005813953488372093}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.005813953488372093},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.005813953488372093},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.005813953488372093},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.005813953488372093},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.026755852842809364},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.04216867469879518},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.06315789473684211},"injectables/ExceptionInterceptor.html":{"ref":"injectables/ExceptionInterceptor.html","tf":0.03225806451612903},"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.064},"injectables/HashService.html":{"ref":"injectables/HashService.html","tf":0.037037037037037035},"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.023474178403755867},"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.031746031746031744},"injectables/ResponseInterceptor.html":{"ref":"injectables/ResponseInterceptor.html","tf":0.046153846153846156},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.03773584905660377},"classes/BadRequestAlertException.html":{"ref":"classes/BadRequestAlertException.html","tf":0.03333333333333333},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.06060606060606061},"classes/GatewayController.html":{"ref":"classes/GatewayController.html","tf":0.06451612903225806},"interfaces/AllProjectAppReqPayload.html":{"ref":"interfaces/AllProjectAppReqPayload.html","tf":0.024390243902439025},"interfaces/CreateProjectAppReqDto.html":{"ref":"interfaces/CreateProjectAppReqDto.html","tf":0.018518518518518517},"interfaces/CreateProjectAppReqPayload.html":{"ref":"interfaces/CreateProjectAppReqPayload.html","tf":0.02},"interfaces/DeleteProjectAppReqPayload.html":{"ref":"interfaces/DeleteProjectAppReqPayload.html","tf":0.022988505747126436},"interfaces/GetProjectAppReqPayload.html":{"ref":"interfaces/GetProjectAppReqPayload.html","tf":0.022988505747126436},"interfaces/GetProjectByIdReqPayload.html":{"ref":"interfaces/GetProjectByIdReqPayload.html","tf":0.02631578947368421},"interfaces/NewProjectReqPayload.html":{"ref":"interfaces/NewProjectReqPayload.html","tf":0.023255813953488372},"interfaces/ResponseDto.html":{"ref":"interfaces/ResponseDto.html","tf":0.015625},"interfaces/UpdateProjectAppReqDto.html":{"ref":"interfaces/UpdateProjectAppReqDto.html","tf":0.018518518518518517},"interfaces/UpdateProjectAppReqPayload.html":{"ref":"interfaces/UpdateProjectAppReqPayload.html","tf":0.01904761904761905}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.006024096385542169},"injectables/ExceptionInterceptor.html":{"ref":"injectables/ExceptionInterceptor.html","tf":0.016129032258064516},"injectables/ResponseInterceptor.html":{"ref":"injectables/ResponseInterceptor.html","tf":0.015384615384615385},"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.011627906976744186},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.011627906976744186},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.011627906976744186},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.011627906976744186},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.011627906976744186}}}}}}}}}},"s":{"docs":{},"_":{"docs":{},"p":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.006024096385542169},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.08695652173913043}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.012048192771084338},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.043478260869565216}}}}}},"n":{"docs":{},"a":{"docs":{},"n":{"docs":{},"(":{"docs":{},"d":{"docs":{"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.004694835680751174}}}}}}}},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.010526315789473684},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.009433962264150943}},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.031578947368421054}}}}}}}}}}}}}}}}}}},"d":{"docs":{"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.005291005291005291},"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.005813953488372093},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.005813953488372093},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.005813953488372093},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.005813953488372093},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.005813953488372093}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.09302325581395349},"classes/BadRequestAlertException.html":{"ref":"classes/BadRequestAlertException.html","tf":0.1},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":5.098837209302325},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.09302325581395349},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.09302325581395349},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.09302325581395349},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}},"e":{"docs":{},"(":{"docs":{},"'":{"0":{"0":{"docs":{},"x":{"0":{"0":{"0":{"0":{"docs":{"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.005813953488372093},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.005813953488372093},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.005813953488372093},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.005813953488372093},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.005813953488372093}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}}}}}}}}}}}},"j":{"docs":{},"o":{"docs":{},"b":{"docs":{"index.html":{"ref":"index.html","tf":0.012875536480686695}}},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}},"w":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.020066889632107024},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.012048192771084338},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.021052631578947368},"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.037037037037037035},"interfaces/AllProjectAppReqPayload.html":{"ref":"interfaces/AllProjectAppReqPayload.html","tf":0.07317073170731707},"interfaces/CreateProjectAppReqPayload.html":{"ref":"interfaces/CreateProjectAppReqPayload.html","tf":0.06},"interfaces/DeleteProjectAppReqPayload.html":{"ref":"interfaces/DeleteProjectAppReqPayload.html","tf":0.06896551724137931},"interfaces/GetProjectAppReqPayload.html":{"ref":"interfaces/GetProjectAppReqPayload.html","tf":0.06896551724137931},"interfaces/GetProjectByIdReqPayload.html":{"ref":"interfaces/GetProjectByIdReqPayload.html","tf":0.07894736842105263},"interfaces/JWTPayload.html":{"ref":"interfaces/JWTPayload.html","tf":5.027397260273973},"interfaces/LogInByEmailAndPassword.html":{"ref":"interfaces/LogInByEmailAndPassword.html","tf":0.014705882352941176},"interfaces/LogInByRefreshToken.html":{"ref":"interfaces/LogInByRefreshToken.html","tf":0.015873015873015872},"interfaces/LogInResponseDto.html":{"ref":"interfaces/LogInResponseDto.html","tf":0.014084507042253521},"interfaces/NewProjectReqPayload.html":{"ref":"interfaces/NewProjectReqPayload.html","tf":0.06976744186046512},"interfaces/RegisterByEmailAndPasswordDto.html":{"ref":"interfaces/RegisterByEmailAndPasswordDto.html","tf":0.01282051282051282},"interfaces/RegisterResponseDto.html":{"ref":"interfaces/RegisterResponseDto.html","tf":0.014705882352941176},"interfaces/UpdateProjectAppReqPayload.html":{"ref":"interfaces/UpdateProjectAppReqPayload.html","tf":0.05714285714285714},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.024096385542168676},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.05263157894736842},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.02358490566037736}}}}}}}},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"k":{"docs":{},"a":{"docs":{},"m":{"docs":{},"i":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}}},"e":{"docs":{},"y":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232},"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.004694835680751174}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.0033444816053511705},"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.005291005291005291}}}}}}},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.012875536480686695}}}}}},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}}}},"e":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.024096385542168676},"injectables/ExceptionInterceptor.html":{"ref":"injectables/ExceptionInterceptor.html","tf":0.03225806451612903},"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.008},"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.023474178403755867},"injectables/ResponseInterceptor.html":{"ref":"injectables/ResponseInterceptor.html","tf":0.015384615384615385},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715}}}}},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.008583690987124463}}},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.021052631578947368},"interfaces/JWTPayload.html":{"ref":"interfaces/JWTPayload.html","tf":0.0136986301369863},"interfaces/LogInByEmailAndPassword.html":{"ref":"interfaces/LogInByEmailAndPassword.html","tf":0.014705882352941176},"interfaces/LogInByRefreshToken.html":{"ref":"interfaces/LogInByRefreshToken.html","tf":0.015873015873015872},"interfaces/LogInResponseDto.html":{"ref":"interfaces/LogInResponseDto.html","tf":5.028169014084507},"interfaces/RegisterByEmailAndPasswordDto.html":{"ref":"interfaces/RegisterByEmailAndPasswordDto.html","tf":0.01282051282051282},"interfaces/RegisterResponseDto.html":{"ref":"interfaces/RegisterResponseDto.html","tf":0.014705882352941176},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}}}}}}}}}}}}},"b":{"docs":{},"y":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"interfaces/JWTPayload.html":{"ref":"interfaces/JWTPayload.html","tf":0.0136986301369863},"interfaces/LogInByEmailAndPassword.html":{"ref":"interfaces/LogInByEmailAndPassword.html","tf":5.029411764705882},"interfaces/LogInByRefreshToken.html":{"ref":"interfaces/LogInByRefreshToken.html","tf":0.015873015873015872},"interfaces/LogInResponseDto.html":{"ref":"interfaces/LogInResponseDto.html","tf":0.014084507042253521},"interfaces/RegisterByEmailAndPasswordDto.html":{"ref":"interfaces/RegisterByEmailAndPasswordDto.html","tf":0.01282051282051282},"interfaces/RegisterResponseDto.html":{"ref":"interfaces/RegisterResponseDto.html","tf":0.014705882352941176},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"interfaces/JWTPayload.html":{"ref":"interfaces/JWTPayload.html","tf":0.0136986301369863},"interfaces/LogInByEmailAndPassword.html":{"ref":"interfaces/LogInByEmailAndPassword.html","tf":0.014705882352941176},"interfaces/LogInByRefreshToken.html":{"ref":"interfaces/LogInByRefreshToken.html","tf":5.031746031746032},"interfaces/LogInResponseDto.html":{"ref":"interfaces/LogInResponseDto.html","tf":0.014084507042253521},"interfaces/RegisterByEmailAndPasswordDto.html":{"ref":"interfaces/RegisterByEmailAndPasswordDto.html","tf":0.01282051282051282},"interfaces/RegisterResponseDto.html":{"ref":"interfaces/RegisterResponseDto.html","tf":0.014705882352941176},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.018867924528301886},"interfaces/JWTPayload.html":{"ref":"interfaces/JWTPayload.html","tf":0.0136986301369863},"interfaces/LogInByEmailAndPassword.html":{"ref":"interfaces/LogInByEmailAndPassword.html","tf":0.014705882352941176},"interfaces/LogInByRefreshToken.html":{"ref":"interfaces/LogInByRefreshToken.html","tf":0.015873015873015872},"interfaces/LogInResponseDto.html":{"ref":"interfaces/LogInResponseDto.html","tf":0.014084507042253521},"interfaces/RegisterByEmailAndPasswordDto.html":{"ref":"interfaces/RegisterByEmailAndPasswordDto.html","tf":0.038461538461538464},"interfaces/RegisterResponseDto.html":{"ref":"interfaces/RegisterResponseDto.html","tf":0.014705882352941176}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"interfaces/ResponseDto.html":{"ref":"interfaces/ResponseDto.html","tf":0.015625}}}},"b":{"docs":{},"i":{"docs":{"interfaces/ResponseDto.html":{"ref":"interfaces/ResponseDto.html","tf":0.015625}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.008583690987124463},"overview.html":{"ref":"overview.html","tf":0.1111111111111111},"modules.html":{"ref":"modules.html","tf":0.4},"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.006688963210702341},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.012048192771084338},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.021052631578947368},"injectables/ExceptionInterceptor.html":{"ref":"injectables/ExceptionInterceptor.html","tf":0.03225806451612903},"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.016},"injectables/HashService.html":{"ref":"injectables/HashService.html","tf":0.037037037037037035},"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.009389671361502348},"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.010582010582010581},"injectables/ResponseInterceptor.html":{"ref":"injectables/ResponseInterceptor.html","tf":0.03076923076923077},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.009433962264150943},"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.011627906976744186},"classes/BadRequestAlertException.html":{"ref":"classes/BadRequestAlertException.html","tf":0.03333333333333333},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.06060606060606061},"classes/GatewayController.html":{"ref":"classes/GatewayController.html","tf":0.06451612903225806},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.011627906976744186},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.011627906976744186},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.011627906976744186},"interfaces/AllProjectAppReqPayload.html":{"ref":"interfaces/AllProjectAppReqPayload.html","tf":0.024390243902439025},"interfaces/CreateFirestoreRecord.html":{"ref":"interfaces/CreateFirestoreRecord.html","tf":0.08},"interfaces/CreateProjectAppReqDto.html":{"ref":"interfaces/CreateProjectAppReqDto.html","tf":0.037037037037037035},"interfaces/CreateProjectAppReqPayload.html":{"ref":"interfaces/CreateProjectAppReqPayload.html","tf":0.02},"interfaces/DeleteProjectAppReqPayload.html":{"ref":"interfaces/DeleteProjectAppReqPayload.html","tf":0.022988505747126436},"interfaces/GetProjectAppReqPayload.html":{"ref":"interfaces/GetProjectAppReqPayload.html","tf":0.022988505747126436},"interfaces/GetProjectByIdReqPayload.html":{"ref":"interfaces/GetProjectByIdReqPayload.html","tf":0.05263157894736842},"interfaces/JWTPayload.html":{"ref":"interfaces/JWTPayload.html","tf":0.0273972602739726},"interfaces/LogInByEmailAndPassword.html":{"ref":"interfaces/LogInByEmailAndPassword.html","tf":0.029411764705882353},"interfaces/LogInByRefreshToken.html":{"ref":"interfaces/LogInByRefreshToken.html","tf":0.031746031746031744},"interfaces/LogInResponseDto.html":{"ref":"interfaces/LogInResponseDto.html","tf":0.028169014084507043},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.011627906976744186},"interfaces/NewProjectDto.html":{"ref":"interfaces/NewProjectDto.html","tf":0.07142857142857142},"interfaces/NewProjectReqPayload.html":{"ref":"interfaces/NewProjectReqPayload.html","tf":0.046511627906976744},"interfaces/RegisterByEmailAndPasswordDto.html":{"ref":"interfaces/RegisterByEmailAndPasswordDto.html","tf":0.02564102564102564},"interfaces/RegisterResponseDto.html":{"ref":"interfaces/RegisterResponseDto.html","tf":0.029411764705882353},"interfaces/ResponseDto.html":{"ref":"interfaces/ResponseDto.html","tf":0.03125},"interfaces/UpdateProjectAppReqDto.html":{"ref":"interfaces/UpdateProjectAppReqDto.html","tf":0.037037037037037035},"interfaces/UpdateProjectAppReqPayload.html":{"ref":"interfaces/UpdateProjectAppReqPayload.html","tf":0.01904761904761905},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.08695652173913043},"coverage.html":{"ref":"coverage.html","tf":0.010416666666666666}}}}},"u":{"docs":{"index.html":{"ref":"index.html","tf":0.02575107296137339}}},"p":{"docs":{"injectables/ResponseInterceptor.html":{"ref":"injectables/ResponseInterceptor.html","tf":0.015384615384615385}},"(":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/ResponseInterceptor.html":{"ref":"injectables/ResponseInterceptor.html","tf":0.015384615384615385}}}}}}}}}},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.008583690987124463}}},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.0033444816053511705},"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.008},"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.005291005291005291},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715},"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.005813953488372093},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.005813953488372093},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":5.011627906976744},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.005813953488372093},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.005813953488372093},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.005291005291005291}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"y":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.010582010582010581}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.011627906976744186},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.011627906976744186},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.011627906976744186},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.011627906976744186},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.010526315789473684},"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.008},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.08695652173913043}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.008},"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.01744186046511628},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.09090909090909091},"classes/GatewayController.html":{"ref":"classes/GatewayController.html","tf":0.0967741935483871},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.01744186046511628},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.01744186046511628},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.01744186046511628},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":5.023255813953488},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}}}}}}}}},"/":{"docs":{},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"classes/BadRequestAlertException.html":{"ref":"classes/BadRequestAlertException.html","tf":0.016666666666666666},"classes/GatewayController.html":{"ref":"classes/GatewayController.html","tf":0.03225806451612903}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":10.043478260869565}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.012875536480686695}},"l":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.006688963210702341},"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.016},"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.009389671361502348},"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.010582010582010581},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.009433962264150943}}}},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":10.2}}}}},"r":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.017167381974248927}}}},"n":{"docs":{},"g":{"docs":{},"o":{"docs":{},"o":{"docs":{},"s":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.0033444816053511705},"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.008},"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.009389671361502348},"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.005291005291005291},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715}},"e":{"docs":{},"/":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"o":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.008}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.04},"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":5.009389671361502},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}}}}}}}},".":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.004694835680751174}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.004694835680751174}}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"≈õ":{"docs":{},"l":{"docs":{},"i":{"docs":{},"w":{"docs":{},"i":{"docs":{},"e":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.0033444816053511705},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.010526315789473684},"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.005291005291005291},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715},"interfaces/JWTPayload.html":{"ref":"interfaces/JWTPayload.html","tf":0.0136986301369863},"interfaces/LogInByEmailAndPassword.html":{"ref":"interfaces/LogInByEmailAndPassword.html","tf":0.014705882352941176},"interfaces/LogInByRefreshToken.html":{"ref":"interfaces/LogInByRefreshToken.html","tf":0.015873015873015872},"interfaces/LogInResponseDto.html":{"ref":"interfaces/LogInResponseDto.html","tf":0.04225352112676056},"interfaces/RegisterByEmailAndPasswordDto.html":{"ref":"interfaces/RegisterByEmailAndPasswordDto.html","tf":0.01282051282051282},"interfaces/RegisterResponseDto.html":{"ref":"interfaces/RegisterResponseDto.html","tf":0.014705882352941176}}}}}}},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.0033444816053511705},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.006024096385542169},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.010526315789473684},"injectables/ExceptionInterceptor.html":{"ref":"injectables/ExceptionInterceptor.html","tf":0.016129032258064516},"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.008},"injectables/HashService.html":{"ref":"injectables/HashService.html","tf":0.018518518518518517},"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.004694835680751174},"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.005291005291005291},"injectables/ResponseInterceptor.html":{"ref":"injectables/ResponseInterceptor.html","tf":0.015384615384615385},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715},"classes/BadRequestAlertException.html":{"ref":"classes/BadRequestAlertException.html","tf":0.016666666666666666},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.030303030303030304},"classes/GatewayController.html":{"ref":"classes/GatewayController.html","tf":0.03225806451612903}}}}}},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.006024096385542169},"injectables/ExceptionInterceptor.html":{"ref":"injectables/ExceptionInterceptor.html","tf":0.016129032258064516},"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.004694835680751174}}}}}},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.01744186046511628},"classes/BadRequestAlertException.html":{"ref":"classes/BadRequestAlertException.html","tf":0.03333333333333333},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.01744186046511628},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.01744186046511628},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.01744186046511628},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.01744186046511628}}}}}}}},"n":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.012875536480686695}},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}}}}}}}},"j":{"docs":{"index.html":{"ref":"index.html","tf":0.034334763948497854}},"s":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.0033444816053511705},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.006024096385542169},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.010526315789473684},"injectables/ExceptionInterceptor.html":{"ref":"injectables/ExceptionInterceptor.html","tf":0.016129032258064516},"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.008},"injectables/HashService.html":{"ref":"injectables/HashService.html","tf":0.018518518518518517},"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.004694835680751174},"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.005291005291005291},"injectables/ResponseInterceptor.html":{"ref":"injectables/ResponseInterceptor.html","tf":0.015384615384615385},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715},"classes/BadRequestAlertException.html":{"ref":"classes/BadRequestAlertException.html","tf":0.016666666666666666}}}}}},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.006024096385542169},"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.004694835680751174},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715}}}}}},"r":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.006024096385542169}}}}},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"o":{"docs":{},"o":{"docs":{},"s":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.0033444816053511705},"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.008},"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.004694835680751174},"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.005291005291005291},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715},"interfaces/ResponseDto.html":{"ref":"interfaces/ResponseDto.html","tf":0.015625}}}}}}}},"i":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.010526315789473684},"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.008}}}}}}}}}}}}},"j":{"docs":{},"w":{"docs":{},"t":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.006024096385542169},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.010526315789473684},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/ExceptionInterceptor.html":{"ref":"injectables/ExceptionInterceptor.html","tf":0.03225806451612903},"injectables/ResponseInterceptor.html":{"ref":"injectables/ResponseInterceptor.html","tf":0.03076923076923077}}}}}}}}}}}}}}},"w":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.033444816053511704},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.012048192771084338},"injectables/ExceptionInterceptor.html":{"ref":"injectables/ExceptionInterceptor.html","tf":0.016129032258064516},"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.024},"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.009389671361502348},"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.042328042328042326},"injectables/ResponseInterceptor.html":{"ref":"injectables/ResponseInterceptor.html","tf":0.015384615384615385},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.04245283018867924},"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.05813953488372093},"classes/BadRequestAlertException.html":{"ref":"classes/BadRequestAlertException.html","tf":0.016666666666666666},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.030303030303030304},"classes/GatewayController.html":{"ref":"classes/GatewayController.html","tf":0.03225806451612903},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.05813953488372093},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.05813953488372093},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.05813953488372093},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.05813953488372093}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"interfaces/GetProjectByIdReqPayload.html":{"ref":"interfaces/GetProjectByIdReqPayload.html","tf":0.02631578947368421},"interfaces/NewProjectReqPayload.html":{"ref":"interfaces/NewProjectReqPayload.html","tf":5.046511627906977},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}}}}}}}}}}}},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"interfaces/NewProjectDto.html":{"ref":"interfaces/NewProjectDto.html","tf":5.071428571428571},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}}}}}}}}}}}}},"x":{"docs":{},"t":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.024096385542168676},"injectables/ExceptionInterceptor.html":{"ref":"injectables/ExceptionInterceptor.html","tf":0.06451612903225806},"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.008},"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.023474178403755867},"injectables/ResponseInterceptor.html":{"ref":"injectables/ResponseInterceptor.html","tf":0.046153846153846156},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715}},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{"injectables/ExceptionInterceptor.html":{"ref":"injectables/ExceptionInterceptor.html","tf":0.016129032258064516},"injectables/ResponseInterceptor.html":{"ref":"injectables/ResponseInterceptor.html","tf":0.015384615384615385}}}}}}}}}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"j":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}}}},"p":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.03862660944206009}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.030100334448160536},"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.008},"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.0582010582010582},"interfaces/AllProjectAppReqPayload.html":{"ref":"interfaces/AllProjectAppReqPayload.html","tf":0.024390243902439025},"interfaces/CreateProjectAppReqDto.html":{"ref":"interfaces/CreateProjectAppReqDto.html","tf":0.07407407407407407},"interfaces/CreateProjectAppReqPayload.html":{"ref":"interfaces/CreateProjectAppReqPayload.html","tf":0.04},"interfaces/DeleteProjectAppReqPayload.html":{"ref":"interfaces/DeleteProjectAppReqPayload.html","tf":0.022988505747126436},"interfaces/GetProjectAppReqPayload.html":{"ref":"interfaces/GetProjectAppReqPayload.html","tf":0.022988505747126436},"interfaces/GetProjectByIdReqPayload.html":{"ref":"interfaces/GetProjectByIdReqPayload.html","tf":0.02631578947368421},"interfaces/NewProjectDto.html":{"ref":"interfaces/NewProjectDto.html","tf":0.10714285714285714},"interfaces/NewProjectReqPayload.html":{"ref":"interfaces/NewProjectReqPayload.html","tf":0.06976744186046512},"interfaces/UpdateProjectAppReqDto.html":{"ref":"interfaces/UpdateProjectAppReqDto.html","tf":0.07407407407407407},"interfaces/UpdateProjectAppReqPayload.html":{"ref":"interfaces/UpdateProjectAppReqPayload.html","tf":0.0380952380952381}}}}},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/HashService.html":{"ref":"injectables/HashService.html","tf":0.018518518518518517},"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.009389671361502348}}}}}}}},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.017167381974248927}}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}},"u":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.02575107296137339},"overview.html":{"ref":"overview.html","tf":0.05555555555555555}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"overview.html":{"ref":"overview.html","tf":10.055555555555555}}}}}}}}},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.006024096385542169},"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.023474178403755867},"classes/BadRequestAlertException.html":{"ref":"classes/BadRequestAlertException.html","tf":0.03333333333333333}},".":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"s":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.004694835680751174}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/ExceptionInterceptor.html":{"ref":"injectables/ExceptionInterceptor.html","tf":0.03225806451612903},"injectables/ResponseInterceptor.html":{"ref":"injectables/ResponseInterceptor.html","tf":0.03076923076923077}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}},"s":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"v":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.0033444816053511705}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.018072289156626505},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.010526315789473684},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.009433962264150943}}}}}}},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.04245283018867924},"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.005813953488372093},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.005813953488372093},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.005813953488372093},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.005813953488372093},"interfaces/JWTPayload.html":{"ref":"interfaces/JWTPayload.html","tf":0.0273972602739726},"interfaces/LogInByEmailAndPassword.html":{"ref":"interfaces/LogInByEmailAndPassword.html","tf":0.058823529411764705},"interfaces/LogInByRefreshToken.html":{"ref":"interfaces/LogInByRefreshToken.html","tf":0.031746031746031744},"interfaces/LogInResponseDto.html":{"ref":"interfaces/LogInResponseDto.html","tf":0.028169014084507043},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.005813953488372093},"interfaces/RegisterByEmailAndPasswordDto.html":{"ref":"interfaces/RegisterByEmailAndPasswordDto.html","tf":0.05128205128205128},"interfaces/RegisterResponseDto.html":{"ref":"interfaces/RegisterResponseDto.html","tf":0.029411764705882353}},"_":{"docs":{},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.005813953488372093},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.005813953488372093},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.005813953488372093},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.005813953488372093},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.008583690987124463}}}}}}}},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.008583690987124463}}}}}},"o":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}}}}},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.008583690987124463}}}}}},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.017167381974248927},"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.020066889632107024},"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.037037037037037035},"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.011627906976744186},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.011627906976744186},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.011627906976744186},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.011627906976744186},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.011627906976744186},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}},"i":{"docs":{},"d":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.05351170568561873},"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.021164021164021163},"interfaces/AllProjectAppReqPayload.html":{"ref":"interfaces/AllProjectAppReqPayload.html","tf":0.08536585365853659},"interfaces/CreateProjectAppReqPayload.html":{"ref":"interfaces/CreateProjectAppReqPayload.html","tf":0.07},"interfaces/DeleteProjectAppReqPayload.html":{"ref":"interfaces/DeleteProjectAppReqPayload.html","tf":0.08045977011494253},"interfaces/GetProjectAppReqPayload.html":{"ref":"interfaces/GetProjectAppReqPayload.html","tf":0.08045977011494253},"interfaces/GetProjectByIdReqPayload.html":{"ref":"interfaces/GetProjectByIdReqPayload.html","tf":0.07894736842105263},"interfaces/NewProjectReqPayload.html":{"ref":"interfaces/NewProjectReqPayload.html","tf":0.023255813953488372},"interfaces/UpdateProjectAppReqPayload.html":{"ref":"interfaces/UpdateProjectAppReqPayload.html","tf":0.06666666666666667}}}},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.005291005291005291}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.005291005291005291}}}}},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.010582010582010581}}}}},"t":{"docs":{},"o":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.010582010582010581}}}}}}},"y":{"docs":{},"p":{"docs":{"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.005291005291005291}}}}}},"?":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.005291005291005291}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.005291005291005291}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":5.01058201058201},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.08695652173913043}}}}}}}},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"y":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.005813953488372093},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.005813953488372093},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.005813953488372093},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.005813953488372093},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"v":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.006688963210702341}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.006024096385542169},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.010526315789473684},"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.008}}}}},"p":{"docs":{"interfaces/ResponseDto.html":{"ref":"interfaces/ResponseDto.html","tf":0.09375}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"injectables/HashService.html":{"ref":"injectables/HashService.html","tf":0.018518518518518517},"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.005813953488372093},"classes/BadRequestAlertException.html":{"ref":"classes/BadRequestAlertException.html","tf":0.016666666666666666},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.005813953488372093},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.005813953488372093},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.005813953488372093},"interfaces/AllProjectAppReqPayload.html":{"ref":"interfaces/AllProjectAppReqPayload.html","tf":0.012195121951219513},"interfaces/CreateFirestoreRecord.html":{"ref":"interfaces/CreateFirestoreRecord.html","tf":0.04},"interfaces/CreateProjectAppReqDto.html":{"ref":"interfaces/CreateProjectAppReqDto.html","tf":0.018518518518518517},"interfaces/CreateProjectAppReqPayload.html":{"ref":"interfaces/CreateProjectAppReqPayload.html","tf":0.01},"interfaces/DeleteProjectAppReqPayload.html":{"ref":"interfaces/DeleteProjectAppReqPayload.html","tf":0.011494252873563218},"interfaces/GetProjectAppReqPayload.html":{"ref":"interfaces/GetProjectAppReqPayload.html","tf":0.011494252873563218},"interfaces/GetProjectByIdReqPayload.html":{"ref":"interfaces/GetProjectByIdReqPayload.html","tf":0.02631578947368421},"interfaces/JWTPayload.html":{"ref":"interfaces/JWTPayload.html","tf":0.0136986301369863},"interfaces/LogInByEmailAndPassword.html":{"ref":"interfaces/LogInByEmailAndPassword.html","tf":0.014705882352941176},"interfaces/LogInByRefreshToken.html":{"ref":"interfaces/LogInByRefreshToken.html","tf":0.015873015873015872},"interfaces/LogInResponseDto.html":{"ref":"interfaces/LogInResponseDto.html","tf":0.014084507042253521},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.005813953488372093},"interfaces/NewProjectDto.html":{"ref":"interfaces/NewProjectDto.html","tf":0.03571428571428571},"interfaces/NewProjectReqPayload.html":{"ref":"interfaces/NewProjectReqPayload.html","tf":0.023255813953488372},"interfaces/RegisterByEmailAndPasswordDto.html":{"ref":"interfaces/RegisterByEmailAndPasswordDto.html","tf":0.01282051282051282},"interfaces/RegisterResponseDto.html":{"ref":"interfaces/RegisterResponseDto.html","tf":0.014705882352941176},"interfaces/ResponseDto.html":{"ref":"interfaces/ResponseDto.html","tf":0.015625},"interfaces/UpdateProjectAppReqDto.html":{"ref":"interfaces/UpdateProjectAppReqDto.html","tf":0.018518518518518517},"interfaces/UpdateProjectAppReqPayload.html":{"ref":"interfaces/UpdateProjectAppReqPayload.html","tf":0.009523809523809525}}}}}}}},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.006688963210702341},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.030120481927710843},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.021052631578947368},"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.024},"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.009389671361502348},"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.005291005291005291},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.018867924528301886}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.06060606060606061},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.08695652173913043}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}},"m":{"docs":{"index.html":{"ref":"index.html","tf":5}}},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.006688963210702341},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.021052631578947368},"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.024},"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.009389671361502348},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.018867924528301886},"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.05813953488372093},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.05813953488372093},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.05813953488372093},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.05813953488372093},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.05813953488372093}}}}}}},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.024096385542168676}},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"?":{"docs":{},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"[":{"docs":{},"\"":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.006024096385542169}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.008583690987124463}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.008583690987124463},"overview.html":{"ref":"overview.html","tf":0.1111111111111111},"modules.html":{"ref":"modules.html","tf":0.4},"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.006688963210702341},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.012048192771084338},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.021052631578947368},"injectables/ExceptionInterceptor.html":{"ref":"injectables/ExceptionInterceptor.html","tf":0.03225806451612903},"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.016},"injectables/HashService.html":{"ref":"injectables/HashService.html","tf":0.037037037037037035},"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.009389671361502348},"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.010582010582010581},"injectables/ResponseInterceptor.html":{"ref":"injectables/ResponseInterceptor.html","tf":0.03076923076923077},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.009433962264150943},"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.011627906976744186},"classes/BadRequestAlertException.html":{"ref":"classes/BadRequestAlertException.html","tf":0.03333333333333333},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.06060606060606061},"classes/GatewayController.html":{"ref":"classes/GatewayController.html","tf":0.06451612903225806},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.011627906976744186},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.011627906976744186},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.011627906976744186},"interfaces/AllProjectAppReqPayload.html":{"ref":"interfaces/AllProjectAppReqPayload.html","tf":0.024390243902439025},"interfaces/CreateFirestoreRecord.html":{"ref":"interfaces/CreateFirestoreRecord.html","tf":0.08},"interfaces/CreateProjectAppReqDto.html":{"ref":"interfaces/CreateProjectAppReqDto.html","tf":0.037037037037037035},"interfaces/CreateProjectAppReqPayload.html":{"ref":"interfaces/CreateProjectAppReqPayload.html","tf":0.02},"interfaces/DeleteProjectAppReqPayload.html":{"ref":"interfaces/DeleteProjectAppReqPayload.html","tf":0.022988505747126436},"interfaces/GetProjectAppReqPayload.html":{"ref":"interfaces/GetProjectAppReqPayload.html","tf":0.022988505747126436},"interfaces/GetProjectByIdReqPayload.html":{"ref":"interfaces/GetProjectByIdReqPayload.html","tf":0.05263157894736842},"interfaces/JWTPayload.html":{"ref":"interfaces/JWTPayload.html","tf":0.0273972602739726},"interfaces/LogInByEmailAndPassword.html":{"ref":"interfaces/LogInByEmailAndPassword.html","tf":0.029411764705882353},"interfaces/LogInByRefreshToken.html":{"ref":"interfaces/LogInByRefreshToken.html","tf":0.031746031746031744},"interfaces/LogInResponseDto.html":{"ref":"interfaces/LogInResponseDto.html","tf":0.028169014084507043},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.011627906976744186},"interfaces/NewProjectDto.html":{"ref":"interfaces/NewProjectDto.html","tf":0.07142857142857142},"interfaces/NewProjectReqPayload.html":{"ref":"interfaces/NewProjectReqPayload.html","tf":0.046511627906976744},"interfaces/RegisterByEmailAndPasswordDto.html":{"ref":"interfaces/RegisterByEmailAndPasswordDto.html","tf":0.02564102564102564},"interfaces/RegisterResponseDto.html":{"ref":"interfaces/RegisterResponseDto.html","tf":0.029411764705882353},"interfaces/ResponseDto.html":{"ref":"interfaces/ResponseDto.html","tf":0.03125},"interfaces/UpdateProjectAppReqDto.html":{"ref":"interfaces/UpdateProjectAppReqDto.html","tf":0.037037037037037035},"interfaces/UpdateProjectAppReqPayload.html":{"ref":"interfaces/UpdateProjectAppReqPayload.html","tf":0.01904761904761905},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.08695652173913043},"coverage.html":{"ref":"coverage.html","tf":0.010416666666666666}}}}},"e":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555}}}},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.021052631578947368},"injectables/ResponseInterceptor.html":{"ref":"injectables/ResponseInterceptor.html","tf":0.03076923076923077}},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"injectables/ResponseInterceptor.html":{"ref":"injectables/ResponseInterceptor.html","tf":0.03076923076923077},"interfaces/ResponseDto.html":{"ref":"interfaces/ResponseDto.html","tf":5.03125},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/ResponseInterceptor.html":{"ref":"injectables/ResponseInterceptor.html","tf":5.030769230769231},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}}}}}}}}}}}}}}}}}},".":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.030303030303030304},"classes/GatewayController.html":{"ref":"classes/GatewayController.html","tf":0.03225806451612903}}}}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.046822742474916385},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.030120481927710843},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.021052631578947368},"injectables/ExceptionInterceptor.html":{"ref":"injectables/ExceptionInterceptor.html","tf":0.06451612903225806},"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.048},"injectables/HashService.html":{"ref":"injectables/HashService.html","tf":0.07407407407407407},"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.046948356807511735},"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.0582010582010582},"injectables/ResponseInterceptor.html":{"ref":"injectables/ResponseInterceptor.html","tf":0.046153846153846156},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.05660377358490566},"classes/BadRequestAlertException.html":{"ref":"classes/BadRequestAlertException.html","tf":0.03333333333333333},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.030303030303030304},"classes/GatewayController.html":{"ref":"classes/GatewayController.html","tf":0.03225806451612903}}}}}},"f":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.030120481927710843}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.005813953488372093},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.005813953488372093},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.005813953488372093},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.005813953488372093},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.005813953488372093}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.031578947368421054},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.018867924528301886},"interfaces/JWTPayload.html":{"ref":"interfaces/JWTPayload.html","tf":0.0273972602739726},"interfaces/LogInByEmailAndPassword.html":{"ref":"interfaces/LogInByEmailAndPassword.html","tf":0.029411764705882353},"interfaces/LogInByRefreshToken.html":{"ref":"interfaces/LogInByRefreshToken.html","tf":0.06349206349206349},"interfaces/LogInResponseDto.html":{"ref":"interfaces/LogInResponseDto.html","tf":0.056338028169014086},"interfaces/RegisterByEmailAndPasswordDto.html":{"ref":"interfaces/RegisterByEmailAndPasswordDto.html","tf":0.02564102564102564},"interfaces/RegisterResponseDto.html":{"ref":"interfaces/RegisterResponseDto.html","tf":0.029411764705882353}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.016},"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.004694835680751174}},".":{"docs":{},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.004694835680751174}}}}}}}}}},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.011627906976744186},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.011627906976744186},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.011627906976744186},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.011627906976744186},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.011627906976744186}},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"y":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.009433962264150943}},"(":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715}}}}}}}},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"interfaces/JWTPayload.html":{"ref":"interfaces/JWTPayload.html","tf":0.0136986301369863},"interfaces/LogInByEmailAndPassword.html":{"ref":"interfaces/LogInByEmailAndPassword.html","tf":0.014705882352941176},"interfaces/LogInByRefreshToken.html":{"ref":"interfaces/LogInByRefreshToken.html","tf":0.015873015873015872},"interfaces/LogInResponseDto.html":{"ref":"interfaces/LogInResponseDto.html","tf":0.014084507042253521},"interfaces/RegisterByEmailAndPasswordDto.html":{"ref":"interfaces/RegisterByEmailAndPasswordDto.html","tf":5.0256410256410255},"interfaces/RegisterResponseDto.html":{"ref":"interfaces/RegisterResponseDto.html","tf":0.014705882352941176},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.005813953488372093},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.005813953488372093},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.005813953488372093},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.005813953488372093},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.005813953488372093}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"interfaces/JWTPayload.html":{"ref":"interfaces/JWTPayload.html","tf":0.0136986301369863},"interfaces/LogInByEmailAndPassword.html":{"ref":"interfaces/LogInByEmailAndPassword.html","tf":0.014705882352941176},"interfaces/LogInByRefreshToken.html":{"ref":"interfaces/LogInByRefreshToken.html","tf":0.015873015873015872},"interfaces/LogInResponseDto.html":{"ref":"interfaces/LogInResponseDto.html","tf":0.014084507042253521},"interfaces/RegisterByEmailAndPasswordDto.html":{"ref":"interfaces/RegisterByEmailAndPasswordDto.html","tf":0.01282051282051282},"interfaces/RegisterResponseDto.html":{"ref":"interfaces/RegisterResponseDto.html","tf":5.029411764705882},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.03862660944206009}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.006688963210702341}}}}},"u":{"docs":{},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.006688963210702341}}}}}}}}}},"w":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.006688963210702341}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.006024096385542169}}}}},"x":{"docs":{},"j":{"docs":{"injectables/ExceptionInterceptor.html":{"ref":"injectables/ExceptionInterceptor.html","tf":0.016129032258064516},"injectables/ResponseInterceptor.html":{"ref":"injectables/ResponseInterceptor.html","tf":0.015384615384615385}}}}},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}}}},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"interfaces/ResponseDto.html":{"ref":"interfaces/ResponseDto.html","tf":0.03125}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.016},"interfaces/CreateFirestoreRecord.html":{"ref":"interfaces/CreateFirestoreRecord.html","tf":0.12}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}}},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.006024096385542169},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.006688963210702341}}}}}}}}},"e":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.006024096385542169}}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"interfaces/ResponseDto.html":{"ref":"interfaces/ResponseDto.html","tf":0.015625}}}}}}},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232},"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.0033444816053511705},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.006024096385542169},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.010526315789473684},"injectables/ExceptionInterceptor.html":{"ref":"injectables/ExceptionInterceptor.html","tf":0.016129032258064516},"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.008},"injectables/HashService.html":{"ref":"injectables/HashService.html","tf":0.018518518518518517},"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.004694835680751174},"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.005291005291005291},"injectables/ResponseInterceptor.html":{"ref":"injectables/ResponseInterceptor.html","tf":0.015384615384615385},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715},"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.005813953488372093},"classes/BadRequestAlertException.html":{"ref":"classes/BadRequestAlertException.html","tf":0.016666666666666666},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.030303030303030304},"classes/GatewayController.html":{"ref":"classes/GatewayController.html","tf":0.03225806451612903},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.005813953488372093},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.005813953488372093},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.005813953488372093},"interfaces/AllProjectAppReqPayload.html":{"ref":"interfaces/AllProjectAppReqPayload.html","tf":0.012195121951219513},"interfaces/CreateFirestoreRecord.html":{"ref":"interfaces/CreateFirestoreRecord.html","tf":0.04},"interfaces/CreateProjectAppReqDto.html":{"ref":"interfaces/CreateProjectAppReqDto.html","tf":0.018518518518518517},"interfaces/CreateProjectAppReqPayload.html":{"ref":"interfaces/CreateProjectAppReqPayload.html","tf":0.01},"interfaces/DeleteProjectAppReqPayload.html":{"ref":"interfaces/DeleteProjectAppReqPayload.html","tf":0.011494252873563218},"interfaces/GetProjectAppReqPayload.html":{"ref":"interfaces/GetProjectAppReqPayload.html","tf":0.011494252873563218},"interfaces/GetProjectByIdReqPayload.html":{"ref":"interfaces/GetProjectByIdReqPayload.html","tf":0.02631578947368421},"interfaces/JWTPayload.html":{"ref":"interfaces/JWTPayload.html","tf":0.0136986301369863},"interfaces/LogInByEmailAndPassword.html":{"ref":"interfaces/LogInByEmailAndPassword.html","tf":0.014705882352941176},"interfaces/LogInByRefreshToken.html":{"ref":"interfaces/LogInByRefreshToken.html","tf":0.015873015873015872},"interfaces/LogInResponseDto.html":{"ref":"interfaces/LogInResponseDto.html","tf":0.014084507042253521},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.005813953488372093},"interfaces/NewProjectDto.html":{"ref":"interfaces/NewProjectDto.html","tf":0.03571428571428571},"interfaces/NewProjectReqPayload.html":{"ref":"interfaces/NewProjectReqPayload.html","tf":0.023255813953488372},"interfaces/RegisterByEmailAndPasswordDto.html":{"ref":"interfaces/RegisterByEmailAndPasswordDto.html","tf":0.01282051282051282},"interfaces/RegisterResponseDto.html":{"ref":"interfaces/RegisterResponseDto.html","tf":0.014705882352941176},"interfaces/ResponseDto.html":{"ref":"interfaces/ResponseDto.html","tf":0.015625},"interfaces/UpdateProjectAppReqDto.html":{"ref":"interfaces/UpdateProjectAppReqDto.html","tf":0.018518518518518517},"interfaces/UpdateProjectAppReqPayload.html":{"ref":"interfaces/UpdateProjectAppReqPayload.html","tf":0.009523809523809525}}}}}},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}},":":{"docs":{},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}}}}}}},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}}},"y":{"docs":{"index.html":{"ref":"index.html","tf":0.008583690987124463}}},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.05813953488372093},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.05813953488372093},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.05813953488372093},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.05813953488372093},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.05813953488372093}}}},"u":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/BadRequestAlertException.html":{"ref":"classes/BadRequestAlertException.html","tf":0.016666666666666666}}}}}}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}}}}}}}}},"e":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.008583690987124463}}}},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.09698996655518395},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.012048192771084338},"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.032},"injectables/HashService.html":{"ref":"injectables/HashService.html","tf":0.1111111111111111},"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.023474178403755867},"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.06349206349206349},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.07547169811320754},"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.023255813953488372},"classes/BadRequestAlertException.html":{"ref":"classes/BadRequestAlertException.html","tf":0.03333333333333333},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.023255813953488372},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.023255813953488372},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.023255813953488372},"interfaces/AllProjectAppReqPayload.html":{"ref":"interfaces/AllProjectAppReqPayload.html","tf":0.1951219512195122},"interfaces/CreateFirestoreRecord.html":{"ref":"interfaces/CreateFirestoreRecord.html","tf":0.12},"interfaces/CreateProjectAppReqDto.html":{"ref":"interfaces/CreateProjectAppReqDto.html","tf":0.2222222222222222},"interfaces/CreateProjectAppReqPayload.html":{"ref":"interfaces/CreateProjectAppReqPayload.html","tf":0.22},"interfaces/DeleteProjectAppReqPayload.html":{"ref":"interfaces/DeleteProjectAppReqPayload.html","tf":0.20689655172413793},"interfaces/GetProjectAppReqPayload.html":{"ref":"interfaces/GetProjectAppReqPayload.html","tf":0.20689655172413793},"interfaces/GetProjectByIdReqPayload.html":{"ref":"interfaces/GetProjectByIdReqPayload.html","tf":0.13157894736842105},"interfaces/JWTPayload.html":{"ref":"interfaces/JWTPayload.html","tf":0.273972602739726},"interfaces/LogInByEmailAndPassword.html":{"ref":"interfaces/LogInByEmailAndPassword.html","tf":0.2647058823529412},"interfaces/LogInByRefreshToken.html":{"ref":"interfaces/LogInByRefreshToken.html","tf":0.25396825396825395},"interfaces/LogInResponseDto.html":{"ref":"interfaces/LogInResponseDto.html","tf":0.2535211267605634},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.023255813953488372},"interfaces/NewProjectDto.html":{"ref":"interfaces/NewProjectDto.html","tf":0.21428571428571427},"interfaces/NewProjectReqPayload.html":{"ref":"interfaces/NewProjectReqPayload.html","tf":0.16279069767441862},"interfaces/RegisterByEmailAndPasswordDto.html":{"ref":"interfaces/RegisterByEmailAndPasswordDto.html","tf":0.28205128205128205},"interfaces/RegisterResponseDto.html":{"ref":"interfaces/RegisterResponseDto.html","tf":0.2647058823529412},"interfaces/ResponseDto.html":{"ref":"interfaces/ResponseDto.html","tf":0.03125},"interfaces/UpdateProjectAppReqDto.html":{"ref":"interfaces/UpdateProjectAppReqDto.html","tf":0.2222222222222222},"interfaces/UpdateProjectAppReqPayload.html":{"ref":"interfaces/UpdateProjectAppReqPayload.html","tf":0.22857142857142856}}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.008}},"(":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.016}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.017167381974248927},"overview.html":{"ref":"overview.html","tf":0.05555555555555555}}}}}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/BadRequestAlertException.html":{"ref":"classes/BadRequestAlertException.html","tf":0.016666666666666666}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.010033444816053512},"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.008},"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.026455026455026454},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.014150943396226415},"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.005813953488372093},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.005813953488372093},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.005813953488372093},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":5.011627906976744},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.005813953488372093},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.0033444816053511705}}}}}}}}},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"(":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.0033444816053511705}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.0033444816053511705}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.008}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.010526315789473684},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715},"interfaces/JWTPayload.html":{"ref":"interfaces/JWTPayload.html","tf":0.0410958904109589},"interfaces/LogInByEmailAndPassword.html":{"ref":"interfaces/LogInByEmailAndPassword.html","tf":0.014705882352941176},"interfaces/LogInByRefreshToken.html":{"ref":"interfaces/LogInByRefreshToken.html","tf":0.015873015873015872},"interfaces/LogInResponseDto.html":{"ref":"interfaces/LogInResponseDto.html","tf":0.014084507042253521},"interfaces/RegisterByEmailAndPasswordDto.html":{"ref":"interfaces/RegisterByEmailAndPasswordDto.html","tf":0.01282051282051282},"interfaces/RegisterResponseDto.html":{"ref":"interfaces/RegisterResponseDto.html","tf":0.014705882352941176}}}},"v":{"docs":{},"g":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555}}}},"r":{"docs":{},"c":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"/":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"/":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.0033444816053511705},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/HashService.html":{"ref":"injectables/HashService.html","tf":0.018518518518518517},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"/":{"docs":{},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.0033444816053511705},"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.008},"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.005291005291005291},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.005813953488372093},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.005813953488372093},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.005813953488372093},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.005813953488372093},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.005813953488372093},"coverage.html":{"ref":"coverage.html","tf":0.026041666666666668}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"/":{"docs":{},"p":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"/":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.006024096385542169},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{},"/":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/GatewayController.html":{"ref":"classes/GatewayController.html","tf":0.03225806451612903},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"/":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/ExceptionInterceptor.html":{"ref":"injectables/ExceptionInterceptor.html","tf":0.016129032258064516},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"/":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/ResponseInterceptor.html":{"ref":"injectables/ResponseInterceptor.html","tf":0.015384615384615385},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"/":{"docs":{},"b":{"docs":{},"a":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/BadRequestAlertException.html":{"ref":"classes/BadRequestAlertException.html","tf":0.016666666666666666},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"/":{"docs":{},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.010526315789473684},"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.008}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"/":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.0033444816053511705},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.006024096385542169},"interfaces/AllProjectAppReqPayload.html":{"ref":"interfaces/AllProjectAppReqPayload.html","tf":0.012195121951219513},"interfaces/CreateProjectAppReqPayload.html":{"ref":"interfaces/CreateProjectAppReqPayload.html","tf":0.01},"interfaces/DeleteProjectAppReqPayload.html":{"ref":"interfaces/DeleteProjectAppReqPayload.html","tf":0.011494252873563218},"interfaces/GetProjectAppReqPayload.html":{"ref":"interfaces/GetProjectAppReqPayload.html","tf":0.011494252873563218},"interfaces/GetProjectByIdReqPayload.html":{"ref":"interfaces/GetProjectByIdReqPayload.html","tf":0.02631578947368421},"interfaces/NewProjectReqPayload.html":{"ref":"interfaces/NewProjectReqPayload.html","tf":0.023255813953488372},"interfaces/UpdateProjectAppReqPayload.html":{"ref":"interfaces/UpdateProjectAppReqPayload.html","tf":0.009523809523809525}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/JWTPayload.html":{"ref":"interfaces/JWTPayload.html","tf":0.0136986301369863},"interfaces/LogInByEmailAndPassword.html":{"ref":"interfaces/LogInByEmailAndPassword.html","tf":0.014705882352941176},"interfaces/LogInByRefreshToken.html":{"ref":"interfaces/LogInByRefreshToken.html","tf":0.015873015873015872},"interfaces/LogInResponseDto.html":{"ref":"interfaces/LogInResponseDto.html","tf":0.014084507042253521},"interfaces/RegisterByEmailAndPasswordDto.html":{"ref":"interfaces/RegisterByEmailAndPasswordDto.html","tf":0.01282051282051282},"interfaces/RegisterResponseDto.html":{"ref":"interfaces/RegisterResponseDto.html","tf":0.014705882352941176},"coverage.html":{"ref":"coverage.html","tf":0.03125}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.010526315789473684},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.0033444816053511705},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"interfaces/AllProjectAppReqPayload.html":{"ref":"interfaces/AllProjectAppReqPayload.html","tf":0.012195121951219513},"interfaces/CreateProjectAppReqDto.html":{"ref":"interfaces/CreateProjectAppReqDto.html","tf":0.018518518518518517},"interfaces/CreateProjectAppReqPayload.html":{"ref":"interfaces/CreateProjectAppReqPayload.html","tf":0.01},"interfaces/DeleteProjectAppReqPayload.html":{"ref":"interfaces/DeleteProjectAppReqPayload.html","tf":0.011494252873563218},"interfaces/GetProjectAppReqPayload.html":{"ref":"interfaces/GetProjectAppReqPayload.html","tf":0.011494252873563218},"interfaces/UpdateProjectAppReqDto.html":{"ref":"interfaces/UpdateProjectAppReqDto.html","tf":0.018518518518518517},"interfaces/UpdateProjectAppReqPayload.html":{"ref":"interfaces/UpdateProjectAppReqPayload.html","tf":0.009523809523809525}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.005291005291005291},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"/":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.008},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"o":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"/":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"o":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.004694835680751174},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"/":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/ResponseInterceptor.html":{"ref":"injectables/ResponseInterceptor.html","tf":0.015384615384615385}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/ResponseDto.html":{"ref":"interfaces/ResponseDto.html","tf":0.015625},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.030303030303030304},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"/":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/AllProjectAppReqPayload.html":{"ref":"interfaces/AllProjectAppReqPayload.html","tf":0.012195121951219513},"interfaces/CreateProjectAppReqPayload.html":{"ref":"interfaces/CreateProjectAppReqPayload.html","tf":0.01},"interfaces/DeleteProjectAppReqPayload.html":{"ref":"interfaces/DeleteProjectAppReqPayload.html","tf":0.011494252873563218},"interfaces/GetProjectAppReqPayload.html":{"ref":"interfaces/GetProjectAppReqPayload.html","tf":0.011494252873563218},"interfaces/UpdateProjectAppReqPayload.html":{"ref":"interfaces/UpdateProjectAppReqPayload.html","tf":0.009523809523809525},"coverage.html":{"ref":"coverage.html","tf":0.026041666666666668}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/GetProjectByIdReqPayload.html":{"ref":"interfaces/GetProjectByIdReqPayload.html","tf":0.02631578947368421},"interfaces/NewProjectReqPayload.html":{"ref":"interfaces/NewProjectReqPayload.html","tf":0.023255813953488372},"coverage.html":{"ref":"coverage.html","tf":0.010416666666666666}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"/":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/CreateFirestoreRecord.html":{"ref":"interfaces/CreateFirestoreRecord.html","tf":0.04},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{},"/":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/CreateProjectAppReqDto.html":{"ref":"interfaces/CreateProjectAppReqDto.html","tf":0.018518518518518517},"interfaces/UpdateProjectAppReqDto.html":{"ref":"interfaces/UpdateProjectAppReqDto.html","tf":0.018518518518518517},"coverage.html":{"ref":"coverage.html","tf":0.010416666666666666}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/NewProjectDto.html":{"ref":"interfaces/NewProjectDto.html","tf":0.03571428571428571},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/HashService.html":{"ref":"injectables/HashService.html","tf":0.05555555555555555}}}}}}}}}}}}},"t":{"docs":{"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.029069767441860465},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.029069767441860465},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.029069767441860465},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.029069767441860465},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.03488372093023256}},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.02145922746781116}},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}}}}},"e":{"2":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}},"docs":{}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.0033444816053511705}},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.006688963210702341}},"o":{"docs":{},"n":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.010033444816053512}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.0033444816053511705}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715}},"(":{"docs":{},"\"":{"docs":{},"j":{"docs":{},"w":{"docs":{},"t":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.006024096385542169}}}}}}}}}}}}},"'":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"o":{"docs":{},"_":{"docs":{},"d":{"docs":{},"b":{"docs":{},"_":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.004694835680751174}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"w":{"docs":{},"t":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.005813953488372093},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.005813953488372093},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.005813953488372093},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.005813953488372093},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.005813953488372093}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.004694835680751174}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.005813953488372093},"classes/BadRequestAlertException.html":{"ref":"classes/BadRequestAlertException.html","tf":0.016666666666666666},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.005813953488372093},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.005813953488372093},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.005813953488372093},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.005813953488372093}},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/BadRequestAlertException.html":{"ref":"classes/BadRequestAlertException.html","tf":0.016666666666666666}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"classes/BadRequestAlertException.html":{"ref":"classes/BadRequestAlertException.html","tf":0.016666666666666666}}}}}}}}}}}}}}}}}},"j":{"docs":{},"w":{"docs":{},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"a":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.006024096385542169}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715}},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.010526315789473684}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"p":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"y":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.008}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.005813953488372093},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.005813953488372093},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.005813953488372093},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.005813953488372093},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.005813953488372093}}}}}},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"o":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"(":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.008}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.005813953488372093},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.005813953488372093},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.005813953488372093},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.005813953488372093},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.005813953488372093}}}}}}}},"s":{"docs":{},"a":{"docs":{},"l":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/HashService.html":{"ref":"injectables/HashService.html","tf":0.018518518518518517}}}}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.004694835680751174}},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.004694835680751174}}}}}},"[":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.004694835680751174}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.005291005291005291}},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.015873015873015872}},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.005291005291005291}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.005291005291005291}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.009433962264150943}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"classes/BadRequestAlertException.html":{"ref":"classes/BadRequestAlertException.html","tf":0.016666666666666666}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.012048192771084338},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.030303030303030304},"classes/GatewayController.html":{"ref":"classes/GatewayController.html","tf":0.03225806451612903}}}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.012875536480686695}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{"injectables/ResponseInterceptor.html":{"ref":"injectables/ResponseInterceptor.html","tf":0.015384615384615385},"classes/BadRequestAlertException.html":{"ref":"classes/BadRequestAlertException.html","tf":0.016666666666666666},"interfaces/ResponseDto.html":{"ref":"interfaces/ResponseDto.html","tf":0.046875}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"6":{"4":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.0033444816053511705}}},"docs":{}},"docs":{}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.024096385542168676},"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.005813953488372093},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.005813953488372093},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.005813953488372093},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.005813953488372093},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.005813953488372093}}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.023411371237458192},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.012048192771084338},"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.028169014084507043},"interfaces/AllProjectAppReqPayload.html":{"ref":"interfaces/AllProjectAppReqPayload.html","tf":0.04878048780487805},"interfaces/CreateFirestoreRecord.html":{"ref":"interfaces/CreateFirestoreRecord.html","tf":0.08},"interfaces/CreateProjectAppReqDto.html":{"ref":"interfaces/CreateProjectAppReqDto.html","tf":0.14814814814814814},"interfaces/CreateProjectAppReqPayload.html":{"ref":"interfaces/CreateProjectAppReqPayload.html","tf":0.1},"interfaces/DeleteProjectAppReqPayload.html":{"ref":"interfaces/DeleteProjectAppReqPayload.html","tf":0.05747126436781609},"interfaces/GetProjectAppReqPayload.html":{"ref":"interfaces/GetProjectAppReqPayload.html","tf":0.05747126436781609},"interfaces/GetProjectByIdReqPayload.html":{"ref":"interfaces/GetProjectByIdReqPayload.html","tf":0.05263157894736842},"interfaces/JWTPayload.html":{"ref":"interfaces/JWTPayload.html","tf":0.0410958904109589},"interfaces/LogInByEmailAndPassword.html":{"ref":"interfaces/LogInByEmailAndPassword.html","tf":0.029411764705882353},"interfaces/LogInByRefreshToken.html":{"ref":"interfaces/LogInByRefreshToken.html","tf":0.015873015873015872},"interfaces/LogInResponseDto.html":{"ref":"interfaces/LogInResponseDto.html","tf":0.04225352112676056},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.01744186046511628},"interfaces/NewProjectDto.html":{"ref":"interfaces/NewProjectDto.html","tf":0.07142857142857142},"interfaces/NewProjectReqPayload.html":{"ref":"interfaces/NewProjectReqPayload.html","tf":0.06976744186046512},"interfaces/RegisterByEmailAndPasswordDto.html":{"ref":"interfaces/RegisterByEmailAndPasswordDto.html","tf":0.05128205128205128},"interfaces/RegisterResponseDto.html":{"ref":"interfaces/RegisterResponseDto.html","tf":0.029411764705882353},"interfaces/ResponseDto.html":{"ref":"interfaces/ResponseDto.html","tf":0.0625},"interfaces/UpdateProjectAppReqDto.html":{"ref":"interfaces/UpdateProjectAppReqDto.html","tf":0.14814814814814814},"interfaces/UpdateProjectAppReqPayload.html":{"ref":"interfaces/UpdateProjectAppReqPayload.html","tf":0.10476190476190476},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.030120481927710843},"injectables/ExceptionInterceptor.html":{"ref":"injectables/ExceptionInterceptor.html","tf":0.03225806451612903},"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.016},"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.04225352112676056},"injectables/ResponseInterceptor.html":{"ref":"injectables/ResponseInterceptor.html","tf":0.015384615384615385},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715}}}}}}}},"o":{"docs":{},"f":{"docs":{"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.028169014084507043}}}}}}},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.0033444816053511705},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.012048192771084338},"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.011627906976744186},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.011627906976744186},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.011627906976744186},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.011627906976744186},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.005813953488372093},"interfaces/ResponseDto.html":{"ref":"interfaces/ResponseDto.html","tf":0.03125}}}},"i":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.006024096385542169},"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.004694835680751174}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.018072289156626505}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.012048192771084338},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.031578947368421054},"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.021164021164021163},"injectables/ResponseInterceptor.html":{"ref":"injectables/ResponseInterceptor.html","tf":0.015384615384615385},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.009433962264150943},"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.005813953488372093},"classes/BadRequestAlertException.html":{"ref":"classes/BadRequestAlertException.html","tf":0.016666666666666666},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.005813953488372093},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.005813953488372093},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.005813953488372093},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.005813953488372093}}}}}}},"s":{"docs":{},"a":{"docs":{},"f":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.030120481927710843},"injectables/ExceptionInterceptor.html":{"ref":"injectables/ExceptionInterceptor.html","tf":0.03225806451612903},"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.016},"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.04225352112676056},"injectables/ResponseInterceptor.html":{"ref":"injectables/ResponseInterceptor.html","tf":0.015384615384615385},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715}}}}},"k":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.005813953488372093},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.005813953488372093},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.005813953488372093},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.005813953488372093},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.005813953488372093}}}}}}},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232},"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.006688963210702341},"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.005291005291005291}},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.0033444816053511705}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.010582010582010581}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"interfaces/AllProjectAppReqPayload.html":{"ref":"interfaces/AllProjectAppReqPayload.html","tf":0.012195121951219513},"interfaces/CreateProjectAppReqPayload.html":{"ref":"interfaces/CreateProjectAppReqPayload.html","tf":0.01},"interfaces/DeleteProjectAppReqPayload.html":{"ref":"interfaces/DeleteProjectAppReqPayload.html","tf":0.011494252873563218},"interfaces/GetProjectAppReqPayload.html":{"ref":"interfaces/GetProjectAppReqPayload.html","tf":0.011494252873563218},"interfaces/UpdateProjectAppReqPayload.html":{"ref":"interfaces/UpdateProjectAppReqPayload.html","tf":5.019047619047619},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}}}}}}}}},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{"interfaces/CreateProjectAppReqDto.html":{"ref":"interfaces/CreateProjectAppReqDto.html","tf":0.018518518518518517},"interfaces/UpdateProjectAppReqDto.html":{"ref":"interfaces/UpdateProjectAppReqDto.html","tf":5.037037037037037},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}},"e":{"docs":{},"r":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.026755852842809364},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.05263157894736842},"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.042328042328042326},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.03773584905660377},"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.005813953488372093},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.005813953488372093},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.005813953488372093},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.005813953488372093},"interfaces/AllProjectAppReqPayload.html":{"ref":"interfaces/AllProjectAppReqPayload.html","tf":0.08536585365853659},"interfaces/CreateProjectAppReqPayload.html":{"ref":"interfaces/CreateProjectAppReqPayload.html","tf":0.07},"interfaces/DeleteProjectAppReqPayload.html":{"ref":"interfaces/DeleteProjectAppReqPayload.html","tf":0.08045977011494253},"interfaces/GetProjectAppReqPayload.html":{"ref":"interfaces/GetProjectAppReqPayload.html","tf":0.08045977011494253},"interfaces/GetProjectByIdReqPayload.html":{"ref":"interfaces/GetProjectByIdReqPayload.html","tf":0.10526315789473684},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.005813953488372093},"interfaces/NewProjectReqPayload.html":{"ref":"interfaces/NewProjectReqPayload.html","tf":0.09302325581395349},"interfaces/UpdateProjectAppReqPayload.html":{"ref":"interfaces/UpdateProjectAppReqPayload.html","tf":0.06666666666666667}},".":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.020066889632107024},"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.021164021164021163}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715}}}}}}},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715}}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.009433962264150943}}}}},"t":{"docs":{},"o":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.009433962264150943}}}}}}},"y":{"docs":{},"p":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.020066889632107024},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.010526315789473684},"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.021164021164021163},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715},"interfaces/JWTPayload.html":{"ref":"interfaces/JWTPayload.html","tf":0.0547945205479452},"interfaces/LogInByEmailAndPassword.html":{"ref":"interfaces/LogInByEmailAndPassword.html","tf":0.029411764705882353},"interfaces/LogInByRefreshToken.html":{"ref":"interfaces/LogInByRefreshToken.html","tf":0.031746031746031744},"interfaces/LogInResponseDto.html":{"ref":"interfaces/LogInResponseDto.html","tf":0.028169014084507043},"interfaces/RegisterByEmailAndPasswordDto.html":{"ref":"interfaces/RegisterByEmailAndPasswordDto.html","tf":0.02564102564102564},"interfaces/RegisterResponseDto.html":{"ref":"interfaces/RegisterResponseDto.html","tf":0.058823529411764705}}}}},"/":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.010526315789473684}}}}}}}}}}},"?":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.010526315789473684}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.010526315789473684}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.021052631578947368}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.0047169811320754715}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":5.009433962264151},"coverage.html":{"ref":"coverage.html","tf":0.005208333333333333}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.08695652173913043}}}}}}}},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"_":{"docs":{},"f":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.005813953488372093},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.005813953488372093},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.005813953488372093},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.005813953488372093},"interfaces/MicroserviceResponse.html":{"ref":"interfaces/MicroserviceResponse.html","tf":0.005813953488372093}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.008583690987124463}}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.016722408026755852},"injectables/FirestoreService.html":{"ref":"injectables/FirestoreService.html","tf":0.008},"injectables/HashService.html":{"ref":"injectables/HashService.html","tf":0.037037037037037035},"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.014084507042253521},"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.021164021164021163},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.014150943396226415},"classes/BaseService.html":{"ref":"classes/BaseService.html","tf":0.030303030303030304},"classes/GatewayController.html":{"ref":"classes/GatewayController.html","tf":0.03225806451612903}}}}},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/HashService.html":{"ref":"injectables/HashService.html","tf":0.018518518518518517},"classes/BadMicroserviceResponse.html":{"ref":"classes/BadMicroserviceResponse.html","tf":0.005813953488372093},"classes/IErrorCode.html":{"ref":"classes/IErrorCode.html","tf":0.005813953488372093},"classes/MicroserviceErrorCode.html":{"ref":"classes/MicroserviceErrorCode.html","tf":0.005813953488372093},"classes/SuccessMicroserviceResponse.html":{"ref":"classes/SuccessMicroserviceResponse.html","tf":0.005813953488372093},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.043478260869565216}}}},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.043478260869565216}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}}},"e":{"docs":{},"b":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}}},"'":{"docs":{},"r":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.006024096385542169}}}}},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}}},"x":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"'":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.004291845493562232}}}}}}},"z":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"overview.html":{"ref":"overview.html","tf":0.1111111111111111}}}}}},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AppService.html":{"ref":"injectables/AppService.html","tf":0.030100334448160536},"injectables/ProjectService.html":{"ref":"injectables/ProjectService.html","tf":0.005291005291005291}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.004694835680751174}},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.004694835680751174}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{"injectables/MongooseService.html":{"ref":"injectables/MongooseService.html","tf":0.009389671361502348}}}}}}}}}},"length":1798},"corpusTokens":["0","0/1","0/2","0/3","0/4","0/5","0/6","0/7","01x0001","01x0002","01x0003","01x0004","01x0005","01x0006","01x0007","01x0008","01x0009","10","19","48","7","_id","_model","_model(data","_schema","access","accesstoken","activ","aftercallmicroservic","aftercallmicroservice(r","all(us","all.map((","allow","allprojectappreqpayload","alreadi","amaz","app","app.activ","app.callback","app.deleteon","app.descript","app.nam","app.sav","app.tojson","app.typ","app_not_found","app_typ","appid","applic","appmodel","appschema","appservic","argument","array","assign","async","auditent","auth.typ","auth/auth.typ","authguard","author","authservic","aw","await","backer","badmicroservicerespons","badmicroserviceresponse(microserviceerrorcode.app_not_found","badmicroserviceresponse(microserviceerrorcode.default","badmicroserviceresponse(microserviceerrorcode.dulicate_app","badmicroserviceresponse(microserviceerrorcode.duplicate_email","badmicroserviceresponse(microserviceerrorcode.email_not_found","badmicroserviceresponse(microserviceerrorcode.user_not_found","badrequestalertexcept","badrequestalertexception(res.errorcod","base","baseservic","bcrypt","bcrypt.comparesync(target","bcrypt.hashsync(valu","bearer","bigint","board","boolean","browser","build","call","callback","callhandl","canactiv","canactivate(context","catch","catcherror","catcherror((","channel","check","check.length","class","click","client","clientid","clientredi","cloud","code","come","compar","compare(target","compileloginrespons","compileloginresponse(us","condit","configservic","conn","conn.model(schemanam","console.log(error","const","constructor","constructor(appmodel","constructor(cli","constructor(cod","constructor(data","constructor(dynamicmodel","constructor(dynamicschemamodel","constructor(errorcod","constructor(jwtservic","constructor(projectmodel","constructor(usermodel","context.getclass","context.gethandl","context.switchtohttp().getrequest","core/exceptions/badrequestalertexcept","core/microservice/microservice.typ","cours","coverag","creat","create(us","createconnect","createdat","createdbi","createfirestorerecord","createprojectappreqdto","createprojectappreqpayload","createrecord","createrecord(schemanam","crypto","data","data[key","datatyp","datatype[key","date","date.parse(`${data[key","debug","deeper","default","delet","delete(us","deleteprojectappreqpayload","deploy","deploywith","descript","desctipt","develop","devtool","disabl","discord","dive","document","dulicate_app","duplicate_email","dynamicmodel","dynamicschema","dynamicschema.sav","dynamicschemamodel","dynamicschemaschema","e","e.tojson","e2","e['timestamp","effici","email","email_not_found","ensur","enterpris","error","errorcod","eslint","eslint/no","exceptioninterceptor","exceptions/badrequestalertexcept","exec","executioncontext","exist","experi","expiresin","export","express","extend","extracttokenfromhead","extracttokenfromheader(request","fals","fast","featur","few","field","file","find","findbyid","findbyid(us","findonebyemailandpassword","findonebyemailandpassword(email","findonebyrefreshtoken","findonebyrefreshtoken(refreshtoken","firestor","firestore.typ","firestore/firestore.typ","firestoreservic","firstnam","flow","focu","follow","found","framework","fromdatatotyp","fromdatatotype(data","full","g","gatewaycontrol","get(us","getprojectappreqpayload","getprojectbyidreqpayload","getrespons","graph","grow","hand","handi","handl","handler","hash","hash(valu","hashservic","help","here","httpexcept","https://nestjs.com","httpstatu","httpstatus.bad_request","id","identifi","ierrorcod","ierrorcode('00x0000","ignor","ignorerefreshtoken","implement","import","incorrect","incorrect_project_id","incorrect_refresh_token","index","info","inform","infrastructur","inject","inject(microserviceconfig.auth.nam","inject(microserviceconfig.firestore.nam","injectmodel","injectmodel(app.nam","injectmodel(dynamicschema.nam","injectmodel(project.nam","injectmodel(user.nam","instal","installcompil","instanceof","interact","intercept","intercept(context","interfac","is_public_key","isnan(d","ispubl","job","join","jwt_refresh_token_expires_in","jwtpayload","jwtservic","kamil","key","lastmodifiedat","lastmodifiedbi","lastnam","learn","length","licens","line","linkedin","loginbyemailandpassword","loginbyrefreshtoken","loginresponsedto","look","loop","make","manag","map","map((data","match","mau","member","messag","metadata","method","microservice/microservice.typ","microserviceconfig","microserviceerrorcod","microserviceerrorcode.default","microserviceerrorcode.incorrect_project_id","microserviceerrorcode.incorrect_refresh_token","microserviceerrorcode.password_is_incorrect","microserviceerrorcode.project_already_exist","microservicerespons","miscellan","mit","mode","model","modul","mongoos","mongoose.createconnect","mongoose.schema(datatyp","mongoose/mongoose.servic","mongooseservic","more","my≈õliwiec","name","need","nest","nestframework","nestinterceptor","nestj","nestjs/common","nestjs/config","nestjs/cor","nestjs/jwt","nestjs/microservic","nestjs/mongoos","new","newprojectdto","newprojectreqpayload","next","next.handle().pip","node.j","npm","number","object","object.keys(data","observ","offer","offici","open","out","overview","parseint(process.env.project_app_secret_key_length","part","password","password_is_incorrect","payload","platform","pleas","possibl","privat","process.env.core_hard_delet","product","progress","project","project.descript","project.nam","project.sav","project.tojson","project.typ","project?.tojson","project_already_exist","projectid","projectmodel","projectschema","projectservic","promis","prop","properti","public","question","randombyt","randomuuid","rawsecret","read","readi","readm","readonli","real","record","record.sav","reflector","refresh","refreshtoken","regist","registerbyemailandpassword","registerbyemailandpassword(email","registerbyemailandpassworddto","registerd","registerresponsedto","repositori","request","request.headers.authorization?.split","request[\"us","requir","res.error","reset","resourc","respons","responsedto","responseinterceptor","result","return","rout","run","rxj","saltorround","scalabl","schema","schemanam","secret","secretkey","see","select","server","setup","side","simpl","sourc","sponsor","src/config/microservice.config","src/core/decorators/publ","src/core/exceptions/badrequestalertexception.t","src/core/gateway/gateway.controller.t","src/core/guards/auth/auth.guard.t","src/core/hash/hash.servic","src/core/hash/hash.service.t","src/core/interceptors/exception/exception.interceptor.t","src/core/interceptors/response/response.interceptor.t","src/core/microservice/microservice.typ","src/core/microservice/microservice.type.t","src/gateway/project/app/app.type.t","src/gateway/project/project.type.t","src/microservices/firestore/firestore.type.t","src/microservices/project/app/app.type.t","src/microservices/project/project.type.t","src/modules/auth/auth.service.t","src/modules/auth/auth.typ","src/modules/auth/auth.type.t","src/modules/base/base.service.t","src/modules/base/base.typ","src/modules/base/base.type.t","src/modules/firestore/firestore.service.t","src/modules/mongoose/mongoose.service.t","src/modules/project/app/app.service.t","src/modules/project/app/app.typ","src/modules/project/project.service.t","src/modules/user/user.service.t","start","start:debug","start:dev","start:prodrun","starter","statement","static","statuscod","stay","step","storeschema","storeschema(schemanam","straightforward","string","sub","successmicroservicerespons","successmicroserviceresponse(app.tojson","successmicroserviceresponse(apps.map((","successmicroserviceresponse(record","successmicroserviceresponse(tru","successmicroserviceresponse(user.tojson","super(errorcode.cod","support","svg","t","take","test","test:covapi","test:e2","thank","this.appmodel","this.appmodel.find","this.appmodel.findon","this.cod","this.configservice.get","this.configservice.get(\"jwt_secret","this.configservice.get('jwt_secret","this.configservice.get('mongo_db_firestor","this.createconnect","this.data","this.dynamicmodel","this.errorcod","this.errorcode.cod","this.errorcode.messag","this.extracttokenfromheader(request","this.fromdatatotype(data","this.fromdatatotype(data.pop","this.fromdatatotype(data[key","this.getstatu","this.hashservice.compare(password","this.hashservice.hash(password","this.hashservice.hash(rawsecret","this.jwtservice.signasync","this.jwtservice.signasync(payload","this.jwtservice.verifyasync(refreshtoken","this.jwtservice.verifyasync(token","this.messag","this.mongooseservice.createrecord(schemanam","this.projectmodel","this.projectmodel.find","this.projectmodel.findbyid(projectid","this.projectmodel.findon","this.reflector.getallandoverride(is_public_key","this.saltorround","this.usermodel","this.usermodel.countdocu","this.usermodel.findon","throw","time","timestamp","token","tostring(\"base64","touch","tri","true","twitter","type","typeof","typescript","unauthorizedexcept","undefin","unit","unknow","unsaf","updat","update(projectid","update(us","updateprojectappreqdto","updateprojectappreqpayload","us","user","user.email","user.password","user.refreshtoken","user.sav","user.tojson","user.typ","user.usernam","user/user.typ","user?.email","user?.refreshtoken","user?.usernam","user_not_found","usermodel","usernam","userschema","userservic","valu","variabl","video","visit","visual","void","watch","we'r","websit","work","x","you'd","you'r","zoom"],"pipeline":["trimmer","stopWordFilter","stemmer"]},
    "store": {"index.html":{"url":"index.html","title":"readme - index","body":"\n                   \n  \n\n  A progressive Node.js framework for building efficient and scalable server-side applications.              \nDescription\nNest framework TypeScript starter repository.\nProject setup\n$ npm installCompile and run the project\n# development$ npm run start# watch mode$ npm run start:dev# debug mode$ npm run start:debug# production mode$ npm run start:prodRun tests\n# unit tests$ npm run test# e2e tests$ npm run test:e2e# test coverage$ npm run test:covAPI Handle Flow\nDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\n$ npm install -g mau$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil My≈õliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \nOverview\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n    \n            \n                \n                    \n                        \n                        10 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        7 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        19 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\nModules\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/project/app/app.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(appModel: any, hashService: any)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     create\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    create(user: any, projectId: string, name: string, type: APP_TYPE, callback: string, desctiption: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     update\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    update(user: any, projectId: string, appId: string, name: string, type: APP_TYPE, callback: string, desctiption: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     delete\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    delete(user: any, projectId: string, appId: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     all\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    all(user: any, projectId: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     get\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    get(user: any, projectId: string, appId: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { App, APP_TYPE } from \"./app.type\";\nimport { Model } from \"mongoose\";\nimport { JWTPayload } from \"src/modules/auth/auth.type\";\nimport {\n  BadMicroserviceResponse,\n  MicroserviceErrorCode,\n  SuccessMicroserviceResponse,\n} from \"src/core/microservice/microservice.type\";\nimport { randomBytes, randomUUID } from \"crypto\";\nimport { HashService } from \"src/core/hash/hash.service\";\n\n@Injectable()\nexport class AppService {\n  constructor(\n    @InjectModel(App.name, \"metadata\") private readonly appModel: Model,\n    private readonly hashService: HashService,\n  ) {}\n\n  async create(\n    user: JWTPayload,\n    projectId: string,\n    name: string,\n    type: APP_TYPE,\n    callback: string,\n    desctiption: string = \"\",\n  ) {\n    if (\n      (\n        await this.appModel.find({\n          project: {\n            _id: projectId,\n          },\n          name: name,\n          user: {\n            username: user.username,\n          },\n        })\n      ).length > 0\n    ) {\n      return new BadMicroserviceResponse(MicroserviceErrorCode.DULICATE_APP);\n    }\n    const rawSecret = randomBytes(\n      parseInt(process.env.PROJECT_APP_SECRET_KEY_LENGTH as string) ?? 48,\n    ).toString(\"base64\");\n    let app = new this.appModel({\n      project: {\n        _id: projectId,\n      },\n      name: name,\n      type: type,\n      callback: callback,\n      description: desctiption,\n      clientId: randomUUID(),\n      secretKey: this.hashService.hash(rawSecret),\n      user: {\n        username: user.username,\n      },\n    });\n    app = await app.save();\n    return new SuccessMicroserviceResponse({\n      ...app.toJSON(),\n      secretKey: rawSecret,\n    });\n  }\n\n  async update(\n    user: JWTPayload,\n    projectId: string,\n    appId: string,\n    name: string,\n    type: APP_TYPE,\n    callback: string,\n    desctiption: string = \"\",\n  ) {\n    let app = await this.appModel.findOne({\n      _id: appId,\n      project: {\n        _id: projectId,\n      },\n      user: {\n        username: user.username,\n      },\n    });\n    if (!app) {\n      return new BadMicroserviceResponse(MicroserviceErrorCode.APP_NOT_FOUND);\n    }\n    app.name = name;\n    app.type = type;\n    app.callback = callback;\n    app.description = desctiption;\n    app = await app.save();\n    return new SuccessMicroserviceResponse({\n      ...app.toJSON(),\n    });\n  }\n\n  async delete(user: JWTPayload, projectId: string, appId: string) {\n    const app = await this.appModel.findOne({\n      _id: appId,\n      project: {\n        _id: projectId,\n      },\n      user: {\n        username: user.username,\n      },\n    });\n    if (!app) {\n      return new BadMicroserviceResponse(MicroserviceErrorCode.APP_NOT_FOUND);\n    }\n    app.activated = false;\n    if (\n      !process.env.CORE_HARD_DELETE ||\n      process.env.CORE_HARD_DELETE === \"true\"\n    ) {\n      await app.save();\n    } else {\n      await app.deleteOne();\n    }\n    return new SuccessMicroserviceResponse(true);\n  }\n\n  async all(user: JWTPayload, projectId: string) {\n    const apps = await this.appModel.find({\n      project: {\n        _id: projectId,\n      },\n      user: {\n        username: user.username,\n      },\n    });\n    return new SuccessMicroserviceResponse(apps.map((e) => e.toJSON()));\n  }\n\n  async get(user: JWTPayload, projectId: string, appId: string) {\n    const app = await this.appModel.findOne({\n      project: {\n        _id: projectId,\n      },\n      user: {\n        username: user.username,\n      },\n      _id: appId,\n    });\n    if (!app) {\n      return new BadMicroserviceResponse(MicroserviceErrorCode.APP_NOT_FOUND);\n    }\n    return new SuccessMicroserviceResponse(app.toJSON());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuard.html":{"url":"injectables/AuthGuard.html","title":"injectable - AuthGuard","body":"\n                   \n\n\n\n\n\n  Injectables\n  AuthGuard\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/core/guards/auth/auth.guard.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(jwtService: JwtService, configService: any, reflector: Reflector)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     canActivate\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    canActivate(context: ExecutionContext)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private extractTokenFromHeader\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    extractTokenFromHeader(request: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     string\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from \"@nestjs/common\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { Reflector } from \"@nestjs/core\";\nimport { JwtService } from \"@nestjs/jwt\";\nimport { Request } from \"express\";\nimport { IS_PUBLIC_KEY } from \"src/core/decorators/public\";\nimport { JWTPayload } from \"src/modules/auth/auth.type\";\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private jwtService: JwtService,\n    private configService: ConfigService,\n    private reflector: Reflector,\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    if (isPublic) {\n      // üí° See this condition\n      return true;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const request = context.switchToHttp().getRequest();\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    const token = this.extractTokenFromHeader(request);\n    if (!token) {\n      throw new UnauthorizedException();\n    }\n    try {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      const payload: JWTPayload = await this.jwtService.verifyAsync(token, {\n        secret: this.configService.get(\"JWT_SECRET\"),\n      });\n      // üí° We're assigning the payload to the request object here\n      // so that we can access it in our route handlers\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n      request[\"user\"] = payload;\n    } catch {\n      throw new UnauthorizedException();\n    }\n    return true;\n  }\n\n  private extractTokenFromHeader(request: Request): string | undefined {\n    const [type, token] = request.headers.authorization?.split(\" \") ?? [];\n    return type === \"Bearer\" ? token : undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(client: ClientRedis, jwtService: JwtService)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     compileLogInResponse\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    compileLogInResponse(user: User, ignoreRefreshToken: boolean)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Inject, Injectable } from \"@nestjs/common\";\nimport { ClientRedis } from \"@nestjs/microservices\";\nimport { microserviceConfig } from \"src/config/microservice.config\";\nimport { User } from \"../user/user.type\";\nimport { JwtService } from \"@nestjs/jwt\";\nimport { JWTPayload, LogInResponseDto } from \"./auth.type\";\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    @Inject(microserviceConfig.auth.name) private readonly client: ClientRedis,\n    private readonly jwtService: JwtService,\n  ) {}\n\n  async compileLogInResponse(\n    user: User | undefined,\n    ignoreRefreshToken: boolean = false,\n  ): Promise {\n    const payload: JWTPayload = {\n      sub: user?.username,\n      username: user?.username,\n      email: user?.email,\n    };\n    const accessToken = await this.jwtService.signAsync(payload);\n    const response: LogInResponseDto = {\n      accessToken: accessToken,\n      refreshToken: ignoreRefreshToken ? undefined : user?.refreshToken,\n      metadata: {\n        ...user,\n        refreshToken: undefined, //ignore refreshToken\n      },\n    };\n    return response;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExceptionInterceptor.html":{"url":"injectables/ExceptionInterceptor.html","title":"injectable - ExceptionInterceptor","body":"\n                   \n\n\n\n\n\n  Injectables\n  ExceptionInterceptor\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interceptors/exception/exception.interceptor.ts\n        \n\n\n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     intercept\n                                \n                            \n            \n                            \n                                \n            intercept(context: ExecutionContext, next: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { catchError, Observable } from 'rxjs';\n\n@Injectable()\nexport class ExceptionInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    return next.handle().pipe(\n      catchError((e) => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        e['timestamp'] = new Date();\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return e;\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FirestoreService.html":{"url":"injectables/FirestoreService.html","title":"injectable - FirestoreService","body":"\n                   \n\n\n\n\n\n  Injectables\n  FirestoreService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/firestore/firestore.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(dynamicModel: any, client: ClientRedis, mongooseService: MongooseService)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     createRecord\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    createRecord(schemaName: string, data: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     storeSchema\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    storeSchema(schemaName: string, fields: Field[])\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Inject, Injectable } from \"@nestjs/common\";\nimport { DynamicSchema, Field } from \"./firestore.type\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { Model } from \"mongoose\";\nimport { microserviceConfig } from \"src/config/microservice.config\";\nimport { ClientRedis } from \"@nestjs/microservices\";\nimport {\n  BadMicroserviceResponse,\n  MicroserviceErrorCode,\n  MicroserviceResponse,\n  SuccessMicroserviceResponse,\n} from \"src/core/microservice/microservice.type\";\nimport { MongooseService } from \"../mongoose/mongoose.service\";\n\n@Injectable()\nexport class FirestoreService {\n  constructor(\n    @InjectModel(DynamicSchema.name, \"firestore\")\n    private readonly dynamicModel: Model,\n    @Inject(microserviceConfig.firestore.name)\n    private readonly client: ClientRedis,\n    private readonly mongooseService: MongooseService,\n  ) {}\n\n  async createRecord(\n    schemaName: string,\n    data: any,\n  ): Promise> {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-assignment\n    const record = await this.mongooseService.createRecord(schemaName, data);\n    if (!record) {\n      return new BadMicroserviceResponse(MicroserviceErrorCode.DEFAULT);\n    }\n    return new SuccessMicroserviceResponse(record);\n  }\n\n  async storeSchema(schemaName: string, fields: Field[]) {\n    let dynamicSchema = new this.dynamicModel({\n      name: schemaName,\n      fields: fields,\n    });\n    dynamicSchema = await dynamicSchema.save();\n    return dynamicSchema;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HashService.html":{"url":"injectables/HashService.html","title":"injectable - HashService","body":"\n                   \n\n\n\n\n\n  Injectables\n  HashService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/core/hash/hash.service.ts\n        \n\n\n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     hash\n                                \n                            \n            \n                            \n                                \n            hash(value: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     compare\n                                \n                            \n            \n                            \n                                \n            compare(target: string, hash: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     saltOrRounds\n                                \n                            \n                            \n                                \n                                    saltOrRounds:     number\n            \n                                \n                            \n                                \n                                    \n                                        Default value: 10\n                                    \n                                \n                        \n                    \n            \n    \n    \n        import { Injectable } from '@nestjs/common';\nimport * as bcrypt from 'bcrypt';\n\n@Injectable()\nexport class HashService {\n  saltOrRounds = 10;\n  hash(value: string) {\n    return bcrypt.hashSync(value, this.saltOrRounds);\n  }\n  compare(target: string, hash: string) {\n    return bcrypt.compareSync(target, hash);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MongooseService.html":{"url":"injectables/MongooseService.html","title":"injectable - MongooseService","body":"\n                   \n\n\n\n\n\n  Injectables\n  MongooseService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/mongoose/mongoose.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(dynamicSchemaModel: any, configService: any)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     createRecord\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    createRecord(schemaName: string, data: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     createConnection\n                                \n                            \n            \n                            \n                                \n            createConnection()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     fromDataToType\n                                \n                            \n            \n                            \n                                \n            fromDataToType(data: object)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { DynamicSchema } from '../firestore/firestore.type';\nimport mongoose, { Model } from 'mongoose';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class MongooseService {\n  constructor(\n    @InjectModel(DynamicSchema.name, 'firestore')\n    private readonly dynamicSchemaModel: Model,\n    private readonly configService: ConfigService,\n  ) {}\n  async createRecord(schemaName: string, data: any) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-argument\n    const dataType = this.fromDataToType(data);\n    const _Schema = new mongoose.Schema(dataType);\n    const conn = this.createConnection();\n    const _Model = conn.model(schemaName, _Schema);\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const record = new _Model(data);\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n    return await record.save();\n  }\n\n  createConnection() {\n    return mongoose.createConnection(\n      this.configService.get('MONGO_DB_FIRESTORE') as string,\n    );\n  }\n\n  fromDataToType(data: object) {\n    if (typeof data !== 'object') {\n      return false;\n    }\n    if (data instanceof Array) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-argument\n      return this.fromDataToType(data.pop());\n    }\n    const dataType = {};\n    for (const key of Object.keys(data)) {\n      if (typeof data[key] === 'string') {\n        dataType[key] = {\n          type: String,\n        };\n        try {\n          const date = Date.parse(`${data[key]}`);\n          if (!isNaN(date)) {\n            dataType[key] = {\n              type: Date,\n            };\n          }\n        } catch (error) {\n          console.log(error);\n        }\n      } else if (typeof data[key] === 'number') {\n        dataType[key] = {\n          type: Number,\n        };\n      } else if (typeof data[key] === 'bigint') {\n        dataType[key] = {\n          type: BigInt,\n        };\n      } else if (typeof data[key] === 'boolean') {\n        dataType[key] = {\n          type: Boolean,\n        };\n      } else if (typeof data[key] === 'object') {\n        if (data[key] instanceof Array) {\n          dataType[key] = {\n            type: Array,\n          };\n        } else {\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n          dataType[key] = this.fromDataToType(data[key] as object);\n        }\n      }\n    }\n    return dataType;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectService.html":{"url":"injectables/ProjectService.html","title":"injectable - ProjectService","body":"\n                   \n\n\n\n\n\n  Injectables\n  ProjectService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/project/project.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(projectModel: any)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     create\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    create(user: JWTPayload, name: string, description: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     update\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    update(projectId: string, name: string, description: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     all\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    all(user: JWTPayload)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     findById\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    findById(user: JWTPayload, projectId: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Project } from './project.type';\nimport { Model } from 'mongoose';\nimport {\n  BadMicroserviceResponse,\n  MicroserviceErrorCode,\n  SuccessMicroserviceResponse,\n} from 'src/core/microservice/microservice.type';\nimport { JWTPayload } from '../auth/auth.type';\n\n@Injectable()\nexport class ProjectService {\n  constructor(\n    @InjectModel(Project.name, 'metadata') private projectModel: Model,\n  ) {}\n  async create(user: JWTPayload, name: string, description: string = '') {\n    const check = await this.projectModel.find({\n      name: name,\n      user: {\n        username: user.username,\n      },\n    });\n    if (check.length > 0) {\n      return new BadMicroserviceResponse(\n        MicroserviceErrorCode.PROJECT_ALREADY_EXIST,\n      );\n    }\n    let project = new this.projectModel({\n      name: name,\n      description: description,\n      user: {\n        username: user.username,\n      },\n    });\n    project = await project.save();\n    return new SuccessMicroserviceResponse({\n      ...project.toJSON(),\n      user: undefined,\n    });\n  }\n\n  async update(projectId: string, name: string, description?: string) {\n    let project = await this.projectModel.findById(projectId);\n    if (!project) {\n      return new BadMicroserviceResponse(\n        MicroserviceErrorCode.INCORRECT_PROJECT_ID,\n      );\n    }\n    if (\n      (await this.projectModel.find({ id: projectId, name: name })).length > 0\n    ) {\n      return new BadMicroserviceResponse(\n        MicroserviceErrorCode.PROJECT_ALREADY_EXIST,\n      );\n    }\n    project.name = name;\n    project.description = description;\n    project = await project.save();\n    return new SuccessMicroserviceResponse({\n      ...project.toJSON(),\n      user: undefined,\n    });\n  }\n\n  async all(user: JWTPayload) {\n    const all = await this.projectModel.find({\n      user: { username: user.username },\n    });\n    return new SuccessMicroserviceResponse(\n      all.map((e) => ({ ...e.toJSON(), user: undefined })),\n    );\n  }\n\n  async findById(user: JWTPayload, projectId: string) {\n    const project = await this.projectModel.findOne({\n      _id: projectId,\n      user: {\n        username: user.username,\n      },\n    });\n    return new SuccessMicroserviceResponse({\n      ...project?.toJSON(),\n      user: undefined,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResponseInterceptor.html":{"url":"injectables/ResponseInterceptor.html","title":"injectable - ResponseInterceptor","body":"\n                   \n\n\n\n\n\n  Injectables\n  ResponseInterceptor\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interceptors/response/response.interceptor.ts\n        \n\n\n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     intercept\n                                \n                            \n            \n                            \n                                \n            intercept(context: ExecutionContext, next: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { map, Observable } from 'rxjs';\nimport { ResponseDto } from 'src/modules/base/base.type';\n\n@Injectable()\nexport class ResponseInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    return next.handle().pipe(\n      map((data) => {\n        const response: ResponseDto = {\n          timestamp: new Date(),\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n          data: data,\n          error: false,\n          errorCode: undefined,\n        };\n        return response;\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(userModel: any, hashService: any, jwtService: JwtService, configService: any)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     registerByEmailAndPassword\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    registerByEmailAndPassword(email: string, password: string, firstName: string, lastName: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     findOneByEmailAndPassword\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    findOneByEmailAndPassword(email: string, password: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     findOneByRefreshToken\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    findOneByRefreshToken(refreshToken: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { User } from './user.type';\nimport { Model } from 'mongoose';\nimport { HashService } from 'src/core/hash/hash.service';\nimport {\n  BadMicroserviceResponse,\n  MicroserviceErrorCode,\n  SuccessMicroserviceResponse,\n} from 'src/core/microservice/microservice.type';\nimport { JwtService } from '@nestjs/jwt';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class UserService {\n  constructor(\n    @InjectModel(User.name, 'metadata')\n    private readonly userModel: Model,\n    private readonly hashService: HashService,\n    private readonly jwtService: JwtService,\n    private readonly configService: ConfigService,\n  ) {}\n\n  async registerByEmailAndPassword(\n    email: string,\n    password: string,\n    firstName: string,\n    lastName: string,\n  ) {\n    if ((await this.userModel.countDocuments({ email: email }).exec()) > 0) {\n      return new BadMicroserviceResponse(MicroserviceErrorCode.DUPLICATE_EMAIL);\n    }\n    let user = new this.userModel({\n      email: email,\n      username: email,\n      firstName: firstName,\n      lastName: lastName,\n      password: this.hashService.hash(password),\n    });\n    user = await user.save();\n    return new SuccessMicroserviceResponse(user.toJSON());\n  }\n\n  async findOneByEmailAndPassword(email: string, password: string) {\n    let user = await this.userModel.findOne({\n      email: email,\n    });\n    if (!user) {\n      return new BadMicroserviceResponse(MicroserviceErrorCode.EMAIL_NOT_FOUND);\n    }\n    if (!this.hashService.compare(password, user.password)) {\n      return new BadMicroserviceResponse(\n        MicroserviceErrorCode.PASSWORD_IS_INCORRECT,\n      );\n    }\n    const refreshToken = await this.jwtService.signAsync(\n      {\n        sub: user.email,\n      },\n      {\n        secret: this.configService.get('JWT_SECRET') as string,\n        expiresIn: this.configService.get(\n          'JWT_REFRESH_TOKEN_EXPIRES_IN',\n        ) as string,\n      },\n    );\n    user.refreshToken = refreshToken;\n    user = await user.save();\n    return new SuccessMicroserviceResponse({\n      ...user.toJSON(),\n      password: undefined, // ignore password\n    });\n  }\n\n  async findOneByRefreshToken(refreshToken: string) {\n    const user = await this.userModel.findOne({\n      refreshToken: refreshToken,\n    });\n    if (!user) {\n      return new BadMicroserviceResponse(MicroserviceErrorCode.USER_NOT_FOUND);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const payload = await this.jwtService.verifyAsync(refreshToken);\n    if (!payload) {\n      return new BadMicroserviceResponse(\n        MicroserviceErrorCode.INCORRECT_REFRESH_TOKEN,\n      );\n    }\n    return new SuccessMicroserviceResponse({\n      ...user.toJSON(),\n      password: undefined, // ignore return password\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BadMicroserviceResponse.html":{"url":"classes/BadMicroserviceResponse.html","title":"class - BadMicroserviceResponse","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  BadMicroserviceResponse\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/core/microservice/microservice.type.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(errorCode: IErrorCode)\n                                \n                            \n            \n                        \n                    \n            \n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     data\n                                \n                            \n                            \n                                \n                                    data:     T\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     error\n                                \n                            \n                            \n                                \n                                    error:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Default value: true\n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                     errorCode\n                                \n                            \n                            \n                                \n                                    errorCode:     IErrorCode\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        export interface MicroserviceResponse {\n  error: boolean;\n  errorCode: IErrorCode;\n  data?: T;\n}\n\nexport class BadMicroserviceResponse implements MicroserviceResponse {\n  error: boolean = true;\n  errorCode: IErrorCode;\n  data?: T | undefined;\n  constructor(errorCode: IErrorCode = MicroserviceErrorCode.DEFAULT) {\n    this.errorCode = errorCode;\n  }\n}\n\nexport class SuccessMicroserviceResponse implements MicroserviceResponse {\n  error: boolean = false;\n  errorCode: IErrorCode = MicroserviceErrorCode.DEFAULT;\n  data: T;\n  constructor(data: T) {\n    this.data = data;\n  }\n}\n\nexport class IErrorCode {\n  code: string;\n  message: string;\n  constructor(code: string, message: string) {\n    this.code = code;\n    this.message = message;\n  }\n}\n\nexport class MicroserviceErrorCode {\n  static readonly DEFAULT = new IErrorCode('00x0000', 'Unknow error');\n  static readonly DUPLICATE_EMAIL = new IErrorCode(\n    '01x0001',\n    'The email already registerd',\n  );\n  static readonly EMAIL_NOT_FOUND = new IErrorCode(\n    '01x0002',\n    'The email was not registered',\n  );\n  static readonly PASSWORD_IS_INCORRECT = new IErrorCode(\n    '01x0003',\n    'The password was incorrected',\n  );\n  static readonly USER_NOT_FOUND = new IErrorCode(\n    '01x0004',\n    'The user can not be founded',\n  );\n  static readonly INCORRECT_REFRESH_TOKEN = new IErrorCode(\n    '01x0005',\n    'The refresh token was incorrected',\n  );\n  static readonly PROJECT_ALREADY_EXIST = new IErrorCode(\n    '01x0006',\n    'The project was already registered',\n  );\n  static readonly INCORRECT_PROJECT_ID = new IErrorCode(\n    '01x0007',\n    'The project id was incorrected',\n  );\n  static readonly DULICATE_APP = new IErrorCode(\n    '01x0008',\n    'The app was already exists',\n  );\n  static readonly APP_NOT_FOUND = new IErrorCode(\n    '01x0009',\n    'Could not find the app',\n  );\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BadRequestAlertException.html":{"url":"classes/BadRequestAlertException.html","title":"class - BadRequestAlertException","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  BadRequestAlertException\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/core/exceptions/BadRequestAlertException.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(errorCode: IErrorCode)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     getResponse\n                                \n                            \n            \n                            \n                                \n            getResponse()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     string | object\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     errorCode\n                                \n                            \n                            \n                                \n                                    errorCode:     boolean\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     IErrorCode\n                                \n                            \n                            \n                                \n                                    IErrorCode:     any\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\nimport { IErrorCode } from '../microservice/microservice.type';\nexport class BadRequestAlertException extends HttpException {\n  errorCode!: IErrorCode;\n  constructor(errorCode: IErrorCode) {\n    super(errorCode.code, HttpStatus.BAD_REQUEST);\n    this.errorCode = errorCode;\n  }\n  getResponse(): string | object {\n    return {\n      timestamp: new Date(),\n      statusCode: this.getStatus(),\n      errorCode: this.errorCode.code,\n      message: this.errorCode.message ?? 'undefined message',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseService.html":{"url":"classes/BaseService.html","title":"class - BaseService","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  BaseService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/base/base.service.ts\n        \n\n\n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                    Public afterCallMicroservice\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    afterCallMicroservice(res: MicroserviceResponse)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n    \n    \n        import { MicroserviceResponse } from '../../core/microservice/microservice.type';\nimport { BadRequestAlertException } from '../../core/exceptions/BadRequestAlertException';\n\nexport class BaseService {\n  public afterCallMicroservice(res: MicroserviceResponse) {\n    if (res.error) {\n      throw new BadRequestAlertException(res.errorCode);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GatewayController.html":{"url":"classes/GatewayController.html","title":"class - GatewayController","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  GatewayController\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/core/gateway/gateway.controller.ts\n        \n\n\n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     afterCallMicroservice\n                                \n                            \n            \n                            \n                                \n            afterCallMicroservice(res: MicroserviceResponse)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n    \n    \n        import { BadRequestAlertException } from '../exceptions/BadRequestAlertException';\nimport { MicroserviceResponse } from '../microservice/microservice.type';\n\nexport class GatewayController {\n  afterCallMicroservice(res: MicroserviceResponse) {\n    if (res.error) {\n      throw new BadRequestAlertException(res.errorCode);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IErrorCode.html":{"url":"classes/IErrorCode.html","title":"class - IErrorCode","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  IErrorCode\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/core/microservice/microservice.type.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(errorCode: IErrorCode)\n                                \n                            \n            \n                        \n                    \n            \n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     data\n                                \n                            \n                            \n                                \n                                    data:     T\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     error\n                                \n                            \n                            \n                                \n                                    error:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Default value: true\n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                     errorCode\n                                \n                            \n                            \n                                \n                                    errorCode:     IErrorCode\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        export interface MicroserviceResponse {\n  error: boolean;\n  errorCode: IErrorCode;\n  data?: T;\n}\n\nexport class BadMicroserviceResponse implements MicroserviceResponse {\n  error: boolean = true;\n  errorCode: IErrorCode;\n  data?: T | undefined;\n  constructor(errorCode: IErrorCode = MicroserviceErrorCode.DEFAULT) {\n    this.errorCode = errorCode;\n  }\n}\n\nexport class SuccessMicroserviceResponse implements MicroserviceResponse {\n  error: boolean = false;\n  errorCode: IErrorCode = MicroserviceErrorCode.DEFAULT;\n  data: T;\n  constructor(data: T) {\n    this.data = data;\n  }\n}\n\nexport class IErrorCode {\n  code: string;\n  message: string;\n  constructor(code: string, message: string) {\n    this.code = code;\n    this.message = message;\n  }\n}\n\nexport class MicroserviceErrorCode {\n  static readonly DEFAULT = new IErrorCode('00x0000', 'Unknow error');\n  static readonly DUPLICATE_EMAIL = new IErrorCode(\n    '01x0001',\n    'The email already registerd',\n  );\n  static readonly EMAIL_NOT_FOUND = new IErrorCode(\n    '01x0002',\n    'The email was not registered',\n  );\n  static readonly PASSWORD_IS_INCORRECT = new IErrorCode(\n    '01x0003',\n    'The password was incorrected',\n  );\n  static readonly USER_NOT_FOUND = new IErrorCode(\n    '01x0004',\n    'The user can not be founded',\n  );\n  static readonly INCORRECT_REFRESH_TOKEN = new IErrorCode(\n    '01x0005',\n    'The refresh token was incorrected',\n  );\n  static readonly PROJECT_ALREADY_EXIST = new IErrorCode(\n    '01x0006',\n    'The project was already registered',\n  );\n  static readonly INCORRECT_PROJECT_ID = new IErrorCode(\n    '01x0007',\n    'The project id was incorrected',\n  );\n  static readonly DULICATE_APP = new IErrorCode(\n    '01x0008',\n    'The app was already exists',\n  );\n  static readonly APP_NOT_FOUND = new IErrorCode(\n    '01x0009',\n    'Could not find the app',\n  );\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MicroserviceErrorCode.html":{"url":"classes/MicroserviceErrorCode.html","title":"class - MicroserviceErrorCode","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  MicroserviceErrorCode\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/core/microservice/microservice.type.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(errorCode: IErrorCode)\n                                \n                            \n            \n                        \n                    \n            \n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     data\n                                \n                            \n                            \n                                \n                                    data:     T\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     error\n                                \n                            \n                            \n                                \n                                    error:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Default value: true\n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                     errorCode\n                                \n                            \n                            \n                                \n                                    errorCode:     IErrorCode\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        export interface MicroserviceResponse {\n  error: boolean;\n  errorCode: IErrorCode;\n  data?: T;\n}\n\nexport class BadMicroserviceResponse implements MicroserviceResponse {\n  error: boolean = true;\n  errorCode: IErrorCode;\n  data?: T | undefined;\n  constructor(errorCode: IErrorCode = MicroserviceErrorCode.DEFAULT) {\n    this.errorCode = errorCode;\n  }\n}\n\nexport class SuccessMicroserviceResponse implements MicroserviceResponse {\n  error: boolean = false;\n  errorCode: IErrorCode = MicroserviceErrorCode.DEFAULT;\n  data: T;\n  constructor(data: T) {\n    this.data = data;\n  }\n}\n\nexport class IErrorCode {\n  code: string;\n  message: string;\n  constructor(code: string, message: string) {\n    this.code = code;\n    this.message = message;\n  }\n}\n\nexport class MicroserviceErrorCode {\n  static readonly DEFAULT = new IErrorCode('00x0000', 'Unknow error');\n  static readonly DUPLICATE_EMAIL = new IErrorCode(\n    '01x0001',\n    'The email already registerd',\n  );\n  static readonly EMAIL_NOT_FOUND = new IErrorCode(\n    '01x0002',\n    'The email was not registered',\n  );\n  static readonly PASSWORD_IS_INCORRECT = new IErrorCode(\n    '01x0003',\n    'The password was incorrected',\n  );\n  static readonly USER_NOT_FOUND = new IErrorCode(\n    '01x0004',\n    'The user can not be founded',\n  );\n  static readonly INCORRECT_REFRESH_TOKEN = new IErrorCode(\n    '01x0005',\n    'The refresh token was incorrected',\n  );\n  static readonly PROJECT_ALREADY_EXIST = new IErrorCode(\n    '01x0006',\n    'The project was already registered',\n  );\n  static readonly INCORRECT_PROJECT_ID = new IErrorCode(\n    '01x0007',\n    'The project id was incorrected',\n  );\n  static readonly DULICATE_APP = new IErrorCode(\n    '01x0008',\n    'The app was already exists',\n  );\n  static readonly APP_NOT_FOUND = new IErrorCode(\n    '01x0009',\n    'Could not find the app',\n  );\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SuccessMicroserviceResponse.html":{"url":"classes/SuccessMicroserviceResponse.html","title":"class - SuccessMicroserviceResponse","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  SuccessMicroserviceResponse\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/core/microservice/microservice.type.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(errorCode: IErrorCode)\n                                \n                            \n            \n                        \n                    \n            \n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     data\n                                \n                            \n                            \n                                \n                                    data:     T\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     error\n                                \n                            \n                            \n                                \n                                    error:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Default value: true\n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                     errorCode\n                                \n                            \n                            \n                                \n                                    errorCode:     IErrorCode\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        export interface MicroserviceResponse {\n  error: boolean;\n  errorCode: IErrorCode;\n  data?: T;\n}\n\nexport class BadMicroserviceResponse implements MicroserviceResponse {\n  error: boolean = true;\n  errorCode: IErrorCode;\n  data?: T | undefined;\n  constructor(errorCode: IErrorCode = MicroserviceErrorCode.DEFAULT) {\n    this.errorCode = errorCode;\n  }\n}\n\nexport class SuccessMicroserviceResponse implements MicroserviceResponse {\n  error: boolean = false;\n  errorCode: IErrorCode = MicroserviceErrorCode.DEFAULT;\n  data: T;\n  constructor(data: T) {\n    this.data = data;\n  }\n}\n\nexport class IErrorCode {\n  code: string;\n  message: string;\n  constructor(code: string, message: string) {\n    this.code = code;\n    this.message = message;\n  }\n}\n\nexport class MicroserviceErrorCode {\n  static readonly DEFAULT = new IErrorCode('00x0000', 'Unknow error');\n  static readonly DUPLICATE_EMAIL = new IErrorCode(\n    '01x0001',\n    'The email already registerd',\n  );\n  static readonly EMAIL_NOT_FOUND = new IErrorCode(\n    '01x0002',\n    'The email was not registered',\n  );\n  static readonly PASSWORD_IS_INCORRECT = new IErrorCode(\n    '01x0003',\n    'The password was incorrected',\n  );\n  static readonly USER_NOT_FOUND = new IErrorCode(\n    '01x0004',\n    'The user can not be founded',\n  );\n  static readonly INCORRECT_REFRESH_TOKEN = new IErrorCode(\n    '01x0005',\n    'The refresh token was incorrected',\n  );\n  static readonly PROJECT_ALREADY_EXIST = new IErrorCode(\n    '01x0006',\n    'The project was already registered',\n  );\n  static readonly INCORRECT_PROJECT_ID = new IErrorCode(\n    '01x0007',\n    'The project id was incorrected',\n  );\n  static readonly DULICATE_APP = new IErrorCode(\n    '01x0008',\n    'The app was already exists',\n  );\n  static readonly APP_NOT_FOUND = new IErrorCode(\n    '01x0009',\n    'Could not find the app',\n  );\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AllProjectAppReqPayload.html":{"url":"interfaces/AllProjectAppReqPayload.html","title":"interface - AllProjectAppReqPayload","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  AllProjectAppReqPayload\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/microservices/project/app/app.type.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        projectId\n                                    \n                                \n                                \n                                    \n                                        projectId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { JWTPayload } from \"src/modules/auth/auth.type\";\nimport { APP_TYPE } from \"src/modules/project/app/app.type\";\n\nexport interface CreateProjectAppReqPayload {\n  user: JWTPayload;\n  projectId: string;\n  name: string;\n  type: APP_TYPE;\n  callback: string;\n  description?: string;\n}\n\nexport interface AllProjectAppReqPayload {\n  user: JWTPayload;\n  projectId: string;\n}\n\nexport interface UpdateProjectAppReqPayload {\n  user: JWTPayload;\n  projectId: string;\n  appId: string;\n  name: string;\n  type: APP_TYPE;\n  callback: string;\n  description?: string;\n}\n\nexport interface DeleteProjectAppReqPayload {\n  user: JWTPayload;\n  projectId: string;\n  appId: string;\n}\n\nexport interface GetProjectAppReqPayload {\n  user: JWTPayload;\n  projectId: string;\n  appId: string;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateFirestoreRecord.html":{"url":"interfaces/CreateFirestoreRecord.html","title":"interface - CreateFirestoreRecord","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  CreateFirestoreRecord\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/microservices/firestore/firestore.type.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        schemaName\n                                    \n                                \n                                \n                                    \n                                        schemaName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        export interface CreateFirestoreRecord {\n  schemaName?: string;\n  data?: any;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateProjectAppReqDto.html":{"url":"interfaces/CreateProjectAppReqDto.html","title":"interface - CreateProjectAppReqDto","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  CreateProjectAppReqDto\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/gateway/project/app/app.type.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        callback\n                                    \n                                \n                                \n                                    \n                                        callback:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { APP_TYPE } from \"src/modules/project/app/app.type\";\n\nexport interface CreateProjectAppReqDto {\n  name: string;\n  type: APP_TYPE;\n  callback: string;\n  description?: string;\n}\n\nexport interface UpdateProjectAppReqDto {\n  name: string;\n  type: APP_TYPE;\n  callback: string;\n  description?: string;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateProjectAppReqPayload.html":{"url":"interfaces/CreateProjectAppReqPayload.html","title":"interface - CreateProjectAppReqPayload","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  CreateProjectAppReqPayload\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/microservices/project/app/app.type.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        callback\n                                    \n                                \n                                \n                                    \n                                        callback:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        projectId\n                                    \n                                \n                                \n                                    \n                                        projectId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { JWTPayload } from \"src/modules/auth/auth.type\";\nimport { APP_TYPE } from \"src/modules/project/app/app.type\";\n\nexport interface CreateProjectAppReqPayload {\n  user: JWTPayload;\n  projectId: string;\n  name: string;\n  type: APP_TYPE;\n  callback: string;\n  description?: string;\n}\n\nexport interface AllProjectAppReqPayload {\n  user: JWTPayload;\n  projectId: string;\n}\n\nexport interface UpdateProjectAppReqPayload {\n  user: JWTPayload;\n  projectId: string;\n  appId: string;\n  name: string;\n  type: APP_TYPE;\n  callback: string;\n  description?: string;\n}\n\nexport interface DeleteProjectAppReqPayload {\n  user: JWTPayload;\n  projectId: string;\n  appId: string;\n}\n\nexport interface GetProjectAppReqPayload {\n  user: JWTPayload;\n  projectId: string;\n  appId: string;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DeleteProjectAppReqPayload.html":{"url":"interfaces/DeleteProjectAppReqPayload.html","title":"interface - DeleteProjectAppReqPayload","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  DeleteProjectAppReqPayload\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/microservices/project/app/app.type.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        appId\n                                    \n                                \n                                \n                                    \n                                        appId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        projectId\n                                    \n                                \n                                \n                                    \n                                        projectId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { JWTPayload } from \"src/modules/auth/auth.type\";\nimport { APP_TYPE } from \"src/modules/project/app/app.type\";\n\nexport interface CreateProjectAppReqPayload {\n  user: JWTPayload;\n  projectId: string;\n  name: string;\n  type: APP_TYPE;\n  callback: string;\n  description?: string;\n}\n\nexport interface AllProjectAppReqPayload {\n  user: JWTPayload;\n  projectId: string;\n}\n\nexport interface UpdateProjectAppReqPayload {\n  user: JWTPayload;\n  projectId: string;\n  appId: string;\n  name: string;\n  type: APP_TYPE;\n  callback: string;\n  description?: string;\n}\n\nexport interface DeleteProjectAppReqPayload {\n  user: JWTPayload;\n  projectId: string;\n  appId: string;\n}\n\nexport interface GetProjectAppReqPayload {\n  user: JWTPayload;\n  projectId: string;\n  appId: string;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetProjectAppReqPayload.html":{"url":"interfaces/GetProjectAppReqPayload.html","title":"interface - GetProjectAppReqPayload","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  GetProjectAppReqPayload\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/microservices/project/app/app.type.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        appId\n                                    \n                                \n                                \n                                    \n                                        appId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        projectId\n                                    \n                                \n                                \n                                    \n                                        projectId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { JWTPayload } from \"src/modules/auth/auth.type\";\nimport { APP_TYPE } from \"src/modules/project/app/app.type\";\n\nexport interface CreateProjectAppReqPayload {\n  user: JWTPayload;\n  projectId: string;\n  name: string;\n  type: APP_TYPE;\n  callback: string;\n  description?: string;\n}\n\nexport interface AllProjectAppReqPayload {\n  user: JWTPayload;\n  projectId: string;\n}\n\nexport interface UpdateProjectAppReqPayload {\n  user: JWTPayload;\n  projectId: string;\n  appId: string;\n  name: string;\n  type: APP_TYPE;\n  callback: string;\n  description?: string;\n}\n\nexport interface DeleteProjectAppReqPayload {\n  user: JWTPayload;\n  projectId: string;\n  appId: string;\n}\n\nexport interface GetProjectAppReqPayload {\n  user: JWTPayload;\n  projectId: string;\n  appId: string;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetProjectByIdReqPayload.html":{"url":"interfaces/GetProjectByIdReqPayload.html","title":"interface - GetProjectByIdReqPayload","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  GetProjectByIdReqPayload\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/microservices/project/project.type.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        projectId\n                                    \n                                \n                                \n                                    \n                                        projectId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { JWTPayload } from 'src/modules/auth/auth.type';\n\nexport interface NewProjectReqPayload {\n  user: JWTPayload;\n  name: string;\n  description: string;\n}\n\nexport interface GetProjectByIdReqPayload {\n  user: JWTPayload;\n  projectId: string;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JWTPayload.html":{"url":"interfaces/JWTPayload.html","title":"interface - JWTPayload","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  JWTPayload\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.type.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        sub\n                                    \n                                \n                                \n                                    \n                                        sub:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        export interface RegisterByEmailAndPasswordDto {\n  email: string;\n  password: string;\n  firstName: string;\n  lastName: string;\n}\n\nexport interface LogInByEmailAndPassword {\n  email: string;\n  password: string;\n}\n\nexport interface LogInByRefreshToken {\n  refreshToken: string;\n}\n\nexport interface JWTPayload {\n  sub?: string;\n  username?: string;\n  email?: string;\n}\n\nexport interface LogInResponseDto {\n  accessToken?: string;\n  refreshToken?: string;\n  metadata?: any;\n}\n\nexport interface RegisterResponseDto {\n  username?: string;\n  email?: string;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LogInByEmailAndPassword.html":{"url":"interfaces/LogInByEmailAndPassword.html","title":"interface - LogInByEmailAndPassword","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  LogInByEmailAndPassword\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.type.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        export interface RegisterByEmailAndPasswordDto {\n  email: string;\n  password: string;\n  firstName: string;\n  lastName: string;\n}\n\nexport interface LogInByEmailAndPassword {\n  email: string;\n  password: string;\n}\n\nexport interface LogInByRefreshToken {\n  refreshToken: string;\n}\n\nexport interface JWTPayload {\n  sub?: string;\n  username?: string;\n  email?: string;\n}\n\nexport interface LogInResponseDto {\n  accessToken?: string;\n  refreshToken?: string;\n  metadata?: any;\n}\n\nexport interface RegisterResponseDto {\n  username?: string;\n  email?: string;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LogInByRefreshToken.html":{"url":"interfaces/LogInByRefreshToken.html","title":"interface - LogInByRefreshToken","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  LogInByRefreshToken\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.type.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        refreshToken\n                                    \n                                \n                                \n                                    \n                                        refreshToken:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        export interface RegisterByEmailAndPasswordDto {\n  email: string;\n  password: string;\n  firstName: string;\n  lastName: string;\n}\n\nexport interface LogInByEmailAndPassword {\n  email: string;\n  password: string;\n}\n\nexport interface LogInByRefreshToken {\n  refreshToken: string;\n}\n\nexport interface JWTPayload {\n  sub?: string;\n  username?: string;\n  email?: string;\n}\n\nexport interface LogInResponseDto {\n  accessToken?: string;\n  refreshToken?: string;\n  metadata?: any;\n}\n\nexport interface RegisterResponseDto {\n  username?: string;\n  email?: string;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LogInResponseDto.html":{"url":"interfaces/LogInResponseDto.html","title":"interface - LogInResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  LogInResponseDto\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.type.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        accessToken\n                                    \n                                \n                                \n                                    \n                                        accessToken:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        metadata\n                                    \n                                \n                                \n                                    \n                                        metadata:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        refreshToken\n                                    \n                                \n                                \n                                    \n                                        refreshToken:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        export interface RegisterByEmailAndPasswordDto {\n  email: string;\n  password: string;\n  firstName: string;\n  lastName: string;\n}\n\nexport interface LogInByEmailAndPassword {\n  email: string;\n  password: string;\n}\n\nexport interface LogInByRefreshToken {\n  refreshToken: string;\n}\n\nexport interface JWTPayload {\n  sub?: string;\n  username?: string;\n  email?: string;\n}\n\nexport interface LogInResponseDto {\n  accessToken?: string;\n  refreshToken?: string;\n  metadata?: any;\n}\n\nexport interface RegisterResponseDto {\n  username?: string;\n  email?: string;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MicroserviceResponse.html":{"url":"interfaces/MicroserviceResponse.html","title":"interface - MicroserviceResponse","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  MicroserviceResponse\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/core/microservice/microservice.type.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        errorCode\n                                    \n                                \n                                \n                                    \n                                        errorCode:     IErrorCode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IErrorCode\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        export interface MicroserviceResponse {\n  error: boolean;\n  errorCode: IErrorCode;\n  data?: T;\n}\n\nexport class BadMicroserviceResponse implements MicroserviceResponse {\n  error: boolean = true;\n  errorCode: IErrorCode;\n  data?: T | undefined;\n  constructor(errorCode: IErrorCode = MicroserviceErrorCode.DEFAULT) {\n    this.errorCode = errorCode;\n  }\n}\n\nexport class SuccessMicroserviceResponse implements MicroserviceResponse {\n  error: boolean = false;\n  errorCode: IErrorCode = MicroserviceErrorCode.DEFAULT;\n  data: T;\n  constructor(data: T) {\n    this.data = data;\n  }\n}\n\nexport class IErrorCode {\n  code: string;\n  message: string;\n  constructor(code: string, message: string) {\n    this.code = code;\n    this.message = message;\n  }\n}\n\nexport class MicroserviceErrorCode {\n  static readonly DEFAULT = new IErrorCode('00x0000', 'Unknow error');\n  static readonly DUPLICATE_EMAIL = new IErrorCode(\n    '01x0001',\n    'The email already registerd',\n  );\n  static readonly EMAIL_NOT_FOUND = new IErrorCode(\n    '01x0002',\n    'The email was not registered',\n  );\n  static readonly PASSWORD_IS_INCORRECT = new IErrorCode(\n    '01x0003',\n    'The password was incorrected',\n  );\n  static readonly USER_NOT_FOUND = new IErrorCode(\n    '01x0004',\n    'The user can not be founded',\n  );\n  static readonly INCORRECT_REFRESH_TOKEN = new IErrorCode(\n    '01x0005',\n    'The refresh token was incorrected',\n  );\n  static readonly PROJECT_ALREADY_EXIST = new IErrorCode(\n    '01x0006',\n    'The project was already registered',\n  );\n  static readonly INCORRECT_PROJECT_ID = new IErrorCode(\n    '01x0007',\n    'The project id was incorrected',\n  );\n  static readonly DULICATE_APP = new IErrorCode(\n    '01x0008',\n    'The app was already exists',\n  );\n  static readonly APP_NOT_FOUND = new IErrorCode(\n    '01x0009',\n    'Could not find the app',\n  );\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NewProjectDto.html":{"url":"interfaces/NewProjectDto.html","title":"interface - NewProjectDto","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  NewProjectDto\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/gateway/project/project.type.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        export interface NewProjectDto {\n  name: string;\n  description?: string;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NewProjectReqPayload.html":{"url":"interfaces/NewProjectReqPayload.html","title":"interface - NewProjectReqPayload","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  NewProjectReqPayload\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/microservices/project/project.type.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { JWTPayload } from 'src/modules/auth/auth.type';\n\nexport interface NewProjectReqPayload {\n  user: JWTPayload;\n  name: string;\n  description: string;\n}\n\nexport interface GetProjectByIdReqPayload {\n  user: JWTPayload;\n  projectId: string;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RegisterByEmailAndPasswordDto.html":{"url":"interfaces/RegisterByEmailAndPasswordDto.html","title":"interface - RegisterByEmailAndPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  RegisterByEmailAndPasswordDto\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.type.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        export interface RegisterByEmailAndPasswordDto {\n  email: string;\n  password: string;\n  firstName: string;\n  lastName: string;\n}\n\nexport interface LogInByEmailAndPassword {\n  email: string;\n  password: string;\n}\n\nexport interface LogInByRefreshToken {\n  refreshToken: string;\n}\n\nexport interface JWTPayload {\n  sub?: string;\n  username?: string;\n  email?: string;\n}\n\nexport interface LogInResponseDto {\n  accessToken?: string;\n  refreshToken?: string;\n  metadata?: any;\n}\n\nexport interface RegisterResponseDto {\n  username?: string;\n  email?: string;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RegisterResponseDto.html":{"url":"interfaces/RegisterResponseDto.html","title":"interface - RegisterResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  RegisterResponseDto\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.type.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        export interface RegisterByEmailAndPasswordDto {\n  email: string;\n  password: string;\n  firstName: string;\n  lastName: string;\n}\n\nexport interface LogInByEmailAndPassword {\n  email: string;\n  password: string;\n}\n\nexport interface LogInByRefreshToken {\n  refreshToken: string;\n}\n\nexport interface JWTPayload {\n  sub?: string;\n  username?: string;\n  email?: string;\n}\n\nexport interface LogInResponseDto {\n  accessToken?: string;\n  refreshToken?: string;\n  metadata?: any;\n}\n\nexport interface RegisterResponseDto {\n  username?: string;\n  email?: string;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResponseDto.html":{"url":"interfaces/ResponseDto.html","title":"interface - ResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  ResponseDto\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/base/base.type.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        errorCode\n                                    \n                                \n                                \n                                    \n                                        errorCode:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        timestamp\n                                    \n                                \n                                \n                                    \n                                        timestamp:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Prop, Schema } from \"@nestjs/mongoose\";\n\nexport interface ResponseDto {\n  timestamp?: Date;\n  error?: boolean;\n  errorCode?: any;\n  data?: any;\n}\n\n@Schema()\nexport class AuditEntity {\n  @Prop()\n  createdBy: string;\n\n  @Prop()\n  createdAt: Date;\n\n  @Prop()\n  lastModifiedBy: string;\n\n  @Prop()\n  lastModifiedAt: Date;\n\n  @Prop({\n    default: true,\n    select: false,\n  })\n  activated: boolean = true;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpdateProjectAppReqDto.html":{"url":"interfaces/UpdateProjectAppReqDto.html","title":"interface - UpdateProjectAppReqDto","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  UpdateProjectAppReqDto\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/gateway/project/app/app.type.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        callback\n                                    \n                                \n                                \n                                    \n                                        callback:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { APP_TYPE } from \"src/modules/project/app/app.type\";\n\nexport interface CreateProjectAppReqDto {\n  name: string;\n  type: APP_TYPE;\n  callback: string;\n  description?: string;\n}\n\nexport interface UpdateProjectAppReqDto {\n  name: string;\n  type: APP_TYPE;\n  callback: string;\n  description?: string;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpdateProjectAppReqPayload.html":{"url":"interfaces/UpdateProjectAppReqPayload.html","title":"interface - UpdateProjectAppReqPayload","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  UpdateProjectAppReqPayload\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/microservices/project/app/app.type.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        appId\n                                    \n                                \n                                \n                                    \n                                        appId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        callback\n                                    \n                                \n                                \n                                    \n                                        callback:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        projectId\n                                    \n                                \n                                \n                                    \n                                        projectId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { JWTPayload } from \"src/modules/auth/auth.type\";\nimport { APP_TYPE } from \"src/modules/project/app/app.type\";\n\nexport interface CreateProjectAppReqPayload {\n  user: JWTPayload;\n  projectId: string;\n  name: string;\n  type: APP_TYPE;\n  callback: string;\n  description?: string;\n}\n\nexport interface AllProjectAppReqPayload {\n  user: JWTPayload;\n  projectId: string;\n}\n\nexport interface UpdateProjectAppReqPayload {\n  user: JWTPayload;\n  projectId: string;\n  appId: string;\n  name: string;\n  type: APP_TYPE;\n  callback: string;\n  description?: string;\n}\n\nexport interface DeleteProjectAppReqPayload {\n  user: JWTPayload;\n  projectId: string;\n  appId: string;\n}\n\nexport interface GetProjectAppReqPayload {\n  user: JWTPayload;\n  projectId: string;\n  appId: string;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous.html":{"url":"miscellaneous.html","title":"miscellaneous - miscellaneous","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n\n\n    \n        Variables\n            \n                \n                    \n                        \n                             microserviceConfig\n                        \n                    \n                    \n                        \n                            microserviceConfig:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             IS_PUBLIC_KEY\n                        \n                    \n                    \n                        \n                            IS_PUBLIC_KEY:     \n    \n                        \n                    \n                        \n                            \n                                Default value: isPublic\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             Public\n                        \n                    \n                    \n                        \n                            Public:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             DynamicSchemaSchema\n                        \n                    \n                    \n                        \n                            DynamicSchemaSchema:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             AppSchema\n                        \n                    \n                    \n                        \n                            AppSchema:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             ProjectSchema\n                        \n                    \n                    \n                        \n                            ProjectSchema:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             UserSchema\n                        \n                    \n                    \n                        \n                            UserSchema:     \n    \n                        \n                    \n                \n            \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage \n\n\n\n    Project\n    0%\n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                src/core/exceptions/BadRequestAlertException.ts\n            \n            \n                classe\n            \n            \n                BadRequestAlertException\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/core/gateway/gateway.controller.ts\n            \n            \n                classe\n            \n            \n                GatewayController\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                src/core/guards/auth/auth.guard.ts\n            \n            \n                injectable\n            \n            \n                AuthGuard\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/core/hash/hash.service.ts\n            \n            \n                injectable\n            \n            \n                HashService\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/core/interceptors/exception/exception.interceptor.ts\n            \n            \n                injectable\n            \n            \n                ExceptionInterceptor\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                src/core/interceptors/response/response.interceptor.ts\n            \n            \n                injectable\n            \n            \n                ResponseInterceptor\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                src/core/microservice/microservice.type.ts\n            \n            \n                classe\n            \n            \n                BadMicroserviceResponse\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/core/microservice/microservice.type.ts\n            \n            \n                classe\n            \n            \n                IErrorCode\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/core/microservice/microservice.type.ts\n            \n            \n                classe\n            \n            \n                MicroserviceErrorCode\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/core/microservice/microservice.type.ts\n            \n            \n                classe\n            \n            \n                SuccessMicroserviceResponse\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/core/microservice/microservice.type.ts\n            \n            \n                interface\n            \n            \n                MicroserviceResponse\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/gateway/project/app/app.type.ts\n            \n            \n                interface\n            \n            \n                CreateProjectAppReqDto\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                src/gateway/project/app/app.type.ts\n            \n            \n                interface\n            \n            \n                UpdateProjectAppReqDto\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                src/gateway/project/project.type.ts\n            \n            \n                interface\n            \n            \n                NewProjectDto\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/microservices/firestore/firestore.type.ts\n            \n            \n                interface\n            \n            \n                CreateFirestoreRecord\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/microservices/project/app/app.type.ts\n            \n            \n                interface\n            \n            \n                AllProjectAppReqPayload\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/microservices/project/app/app.type.ts\n            \n            \n                interface\n            \n            \n                CreateProjectAppReqPayload\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                src/microservices/project/app/app.type.ts\n            \n            \n                interface\n            \n            \n                DeleteProjectAppReqPayload\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/microservices/project/app/app.type.ts\n            \n            \n                interface\n            \n            \n                GetProjectAppReqPayload\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/microservices/project/app/app.type.ts\n            \n            \n                interface\n            \n            \n                UpdateProjectAppReqPayload\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                src/microservices/project/project.type.ts\n            \n            \n                interface\n            \n            \n                GetProjectByIdReqPayload\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/microservices/project/project.type.ts\n            \n            \n                interface\n            \n            \n                NewProjectReqPayload\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/modules/auth/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                src/modules/auth/auth.type.ts\n            \n            \n                interface\n            \n            \n                JWTPayload\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/modules/auth/auth.type.ts\n            \n            \n                interface\n            \n            \n                LogInByEmailAndPassword\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/modules/auth/auth.type.ts\n            \n            \n                interface\n            \n            \n                LogInByRefreshToken\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                src/modules/auth/auth.type.ts\n            \n            \n                interface\n            \n            \n                LogInResponseDto\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/modules/auth/auth.type.ts\n            \n            \n                interface\n            \n            \n                RegisterByEmailAndPasswordDto\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                src/modules/auth/auth.type.ts\n            \n            \n                interface\n            \n            \n                RegisterResponseDto\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/modules/base/base.service.ts\n            \n            \n                classe\n            \n            \n                BaseService\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                src/modules/base/base.type.ts\n            \n            \n                interface\n            \n            \n                ResponseDto\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                src/modules/firestore/firestore.service.ts\n            \n            \n                injectable\n            \n            \n                FirestoreService\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/modules/mongoose/mongoose.service.ts\n            \n            \n                injectable\n            \n            \n                MongooseService\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/modules/project/app/app.service.ts\n            \n            \n                injectable\n            \n            \n                AppService\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                src/modules/project/project.service.ts\n            \n            \n                injectable\n            \n            \n                ProjectService\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                src/modules/user/user.service.ts\n            \n            \n                injectable\n            \n            \n                UserService\n            \n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
